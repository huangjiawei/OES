// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static OnlineExam.Controllers.AccountController Account = new OnlineExam.Controllers.T4MVC_AccountController();
    public static OnlineExam.Controllers.Background.ChoiceController Choice = new OnlineExam.Controllers.Background.T4MVC_ChoiceController();
    public static OnlineExam.Controllers.Background.EssayController Essay = new OnlineExam.Controllers.Background.T4MVC_EssayController();
    public static OnlineExam.Controllers.Background.QuestionImportController QuestionImport = new OnlineExam.Controllers.Background.T4MVC_QuestionImportController();
    public static OnlineExam.Controllers.Background.SubjectController Subject = new OnlineExam.Controllers.Background.T4MVC_SubjectController();
    public static OnlineExam.Controllers.HomeController Home = new OnlineExam.Controllers.T4MVC_HomeController();
    public static OnlineExam.Controllers.ManageController Manage = new OnlineExam.Controllers.T4MVC_ManageController();
    public static OnlineExam.Controllers.PaperImportController PaperImport = new OnlineExam.Controllers.T4MVC_PaperImportController();
    public static T4MVC.QuestionController Question = new T4MVC.QuestionController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
    public static T4MVC.xxxxxxxxxxxxxxxSingleChoiceController xxxxxxxxxxxxxxxSingleChoice = new T4MVC.xxxxxxxxxxxxxxxSingleChoiceController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class artDialog {
            private const string URLPATH = "~/Scripts/artDialog";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string _gitignore = Url(".gitignore");
            public static readonly string bower_json = Url("bower.json");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Scripts/artDialog/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ui_dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui-dialog.min.css") ? Url("ui-dialog.min.css") : Url("ui-dialog.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class dist {
                private const string URLPATH = "~/Scripts/artDialog/dist";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string dialog_min_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog-min.min.js") ? Url("dialog-min.min.js") : Url("dialog-min.js");
                public static readonly string dialog_plus_min_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog-plus-min.min.js") ? Url("dialog-plus-min.min.js") : Url("dialog-plus-min.js");
                public static readonly string dialog_plus_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog-plus.min.js") ? Url("dialog-plus.min.js") : Url("dialog-plus.js");
                public static readonly string dialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.js") ? Url("dialog.min.js") : Url("dialog.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class doc {
                private const string URLPATH = "~/Scripts/artDialog/doc";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class css {
                    private const string URLPATH = "~/Scripts/artDialog/doc/css";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                }
            
                public static readonly string index_html = Url("index.html");
                public static readonly string index_md = Url("index.md");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class js {
                    private const string URLPATH = "~/Scripts/artDialog/doc/js";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                    public static readonly string sh_languages_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sh_languages.min.js") ? Url("sh_languages.min.js") : Url("sh_languages.js");
                }
            
            }
        
            public static readonly string Gruntfile_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Gruntfile.min.js") ? Url("Gruntfile.min.js") : Url("Gruntfile.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lib {
                private const string URLPATH = "~/Scripts/artDialog/lib";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_1_10_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.10.2.min.js") ? Url("jquery-1.10.2.min.js") : Url("jquery-1.10.2.js");
                public static readonly string require_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/require.min.js") ? Url("require.min.js") : Url("require.js");
                public static readonly string sea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sea.min.js") ? Url("sea.min.js") : Url("sea.js");
            }
        
            public static readonly string LICENSE_md = Url("LICENSE.md");
            public static readonly string package_json = Url("package.json");
            public static readonly string README_md = Url("README.md");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class src {
                private const string URLPATH = "~/Scripts/artDialog/src";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string dialog_config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog-config.min.js") ? Url("dialog-config.min.js") : Url("dialog-config.js");
                public static readonly string dialog_plus_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog-plus.min.js") ? Url("dialog-plus.min.js") : Url("dialog-plus.js");
                public static readonly string dialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.js") ? Url("dialog.min.js") : Url("dialog.js");
                public static readonly string drag_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/drag.min.js") ? Url("drag.min.js") : Url("drag.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class global_modules {
                    private const string URLPATH = "~/Scripts/artDialog/src/global_modules";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                }
            
                public static readonly string popup_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/popup.min.js") ? Url("popup.min.js") : Url("popup.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class test {
                private const string URLPATH = "~/Scripts/artDialog/test";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string align_overflow_html = Url("align-overflow.html");
                public static readonly string align_html = Url("align.html");
                public static readonly string button_html = Url("button.html");
                public static readonly string close_html = Url("close.html");
                public static readonly string content_element_html = Url("content-element.html");
                public static readonly string content_html = Url("content.html");
                public static readonly string dialog_drag_html = Url("dialog-drag.html");
                public static readonly string fixed_html = Url("fixed.html");
                public static readonly string focus_html = Url("focus.html");
                public static readonly string follow_html = Url("follow.html");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class iframe {
                    private const string URLPATH = "~/Scripts/artDialog/test/iframe";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_content_html = Url("dialog-content.html");
                    public static readonly string dialog_input_html = Url("dialog-input.html");
                    public static readonly string index_html = Url("index.html");
                    public static readonly string main_html = Url("main.html");
                }
            
                public static readonly string iframe_html = Url("iframe.html");
                public static readonly string loading_html = Url("loading.html");
                public static readonly string quickClose_html = Url("quickClose.html");
                public static readonly string show_element_html = Url("show-element.html");
                public static readonly string show_event_html = Url("show-event.html");
                public static readonly string show_html = Url("show.html");
                public static readonly string showModal_html = Url("showModal.html");
                public static readonly string title_html = Url("title.html");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap_rating {
            private const string URLPATH = "~/Scripts/bootstrap-rating";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_rating_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-rating.min.js") ? Url("bootstrap-rating.min.js") : Url("bootstrap-rating.js");
            public static readonly string bootstrap_rating_min_js = Url("bootstrap-rating.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap_tree {
            private const string URLPATH = "~/Scripts/bootstrap-tree";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Scripts/bootstrap-tree/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_treeview_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-treeview.min.css") ? Url("bootstrap-treeview.min.css") : Url("bootstrap-treeview.css");
            }
        
            public static readonly string example_dom_html = Url("example-dom.html");
            public static readonly string index_html = Url("index.html");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                private const string URLPATH = "~/Scripts/bootstrap-tree/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_treeview_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-treeview.min.js") ? Url("bootstrap-treeview.min.js") : Url("bootstrap-treeview.js");
            }
        
        }
    
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ckeditor {
            private const string URLPATH = "~/Scripts/ckeditor";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class adapters {
                private const string URLPATH = "~/Scripts/ckeditor/adapters";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
            }
        
            public static readonly string build_config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/build-config.min.js") ? Url("build-config.min.js") : Url("build-config.js");
            public static readonly string CHANGES_md = Url("CHANGES.md");
            public static readonly string ckeditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor.min.js") ? Url("ckeditor.min.js") : Url("ckeditor.js");
            public static readonly string config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/config.min.js") ? Url("config.min.js") : Url("config.js");
            public static readonly string config_default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/config_default.min.js") ? Url("config_default.min.js") : Url("config_default.js");
            public static readonly string contents_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/contents.min.css") ? Url("contents.min.css") : Url("contents.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lang {
                private const string URLPATH = "~/Scripts/ckeditor/lang";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                public static readonly string bn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bn.min.js") ? Url("bn.min.js") : Url("bn.js");
                public static readonly string bs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bs.min.js") ? Url("bs.min.js") : Url("bs.js");
                public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                public static readonly string en_au_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-au.min.js") ? Url("en-au.min.js") : Url("en-au.js");
                public static readonly string en_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-ca.min.js") ? Url("en-ca.min.js") : Url("en-ca.js");
                public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                public static readonly string eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eu.min.js") ? Url("eu.min.js") : Url("eu.js");
                public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                public static readonly string fo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fo.min.js") ? Url("fo.min.js") : Url("fo.js");
                public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                public static readonly string hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hi.min.js") ? Url("hi.min.js") : Url("hi.js");
                public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                public static readonly string id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/id.min.js") ? Url("id.min.js") : Url("id.js");
                public static readonly string is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/is.min.js") ? Url("is.min.js") : Url("is.js");
                public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                public static readonly string ka_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ka.min.js") ? Url("ka.min.js") : Url("ka.js");
                public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
                public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                public static readonly string mn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mn.min.js") ? Url("mn.min.js") : Url("mn.js");
                public static readonly string ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ms.min.js") ? Url("ms.min.js") : Url("ms.js");
                public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                public static readonly string si_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/si.min.js") ? Url("si.min.js") : Url("si.js");
                public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                public static readonly string sq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sq.min.js") ? Url("sq.min.js") : Url("sq.js");
                public static readonly string sr_latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr-latn.min.js") ? Url("sr-latn.min.js") : Url("sr-latn.js");
                public static readonly string sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr.min.js") ? Url("sr.min.js") : Url("sr.js");
                public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/th.min.js") ? Url("th.min.js") : Url("th.js");
                public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                public static readonly string tt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tt.min.js") ? Url("tt.min.js") : Url("tt.js");
                public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
            }
        
            public static readonly string LICENSE_md = Url("LICENSE.md");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Scripts/ckeditor/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class a11yhelp {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/a11yhelp";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string a11yhelp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/a11yhelp.min.js") ? Url("a11yhelp.min.js") : Url("a11yhelp.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class lang {
                            private const string URLPATH = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                            public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                            public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                            public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                            public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                            public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                            public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                            public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                            public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                            public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                            public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                            public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                            public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                            public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                            public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                            public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                            public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                            public static readonly string fo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fo.min.js") ? Url("fo.min.js") : Url("fo.js");
                            public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                            public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                            public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                            public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                            public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                            public static readonly string hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hi.min.js") ? Url("hi.min.js") : Url("hi.js");
                            public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                            public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                            public static readonly string id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/id.min.js") ? Url("id.min.js") : Url("id.js");
                            public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                            public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                            public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                            public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                            public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                            public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
                            public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                            public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                            public static readonly string mn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mn.min.js") ? Url("mn.min.js") : Url("mn.js");
                            public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                            public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                            public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                            public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                            public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                            public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                            public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                            public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                            public static readonly string si_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/si.min.js") ? Url("si.min.js") : Url("si.js");
                            public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                            public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                            public static readonly string sq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sq.min.js") ? Url("sq.min.js") : Url("sq.js");
                            public static readonly string sr_latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr-latn.min.js") ? Url("sr-latn.min.js") : Url("sr-latn.js");
                            public static readonly string sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr.min.js") ? Url("sr.min.js") : Url("sr.js");
                            public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                            public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/th.min.js") ? Url("th.min.js") : Url("th.js");
                            public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                            public static readonly string tt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tt.min.js") ? Url("tt.min.js") : Url("tt.js");
                            public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                            public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                            public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                            public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                            public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class about {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/about";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/about/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string about_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/about.min.js") ? Url("about.min.js") : Url("about.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Scripts/ckeditor/plugins/about/dialogs/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string logo_ckeditor_png = Url("logo_ckeditor.png");
                        }
                    
                        public static readonly string logo_ckeditor_png = Url("logo_ckeditor.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class button {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/button";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class clipboard {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/clipboard";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/clipboard/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string paste_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/paste.min.js") ? Url("paste.min.js") : Url("paste.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class colordialog {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/colordialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/colordialog/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string colordialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/colordialog.min.js") ? Url("colordialog.min.js") : Url("colordialog.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class confighelper {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/confighelper";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class dialog {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/dialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialogDefinition_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialogDefinition.min.js") ? Url("dialogDefinition.min.js") : Url("dialogDefinition.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class dialogui {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/dialogui";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class div {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/div";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/div/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string div_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/div.min.js") ? Url("div.min.js") : Url("div.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class filetools {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/filetools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class find {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/find";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/find/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string find_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/find.min.js") ? Url("find.min.js") : Url("find.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class flash {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/flash";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/flash/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string flash_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/flash.min.js") ? Url("flash.min.js") : Url("flash.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/flash/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string placeholder_png = Url("placeholder.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class forms {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/forms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/forms/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string button_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button.min.js") ? Url("button.min.js") : Url("button.js");
                        public static readonly string checkbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/checkbox.min.js") ? Url("checkbox.min.js") : Url("checkbox.js");
                        public static readonly string form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form.min.js") ? Url("form.min.js") : Url("form.js");
                        public static readonly string hiddenfield_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hiddenfield.min.js") ? Url("hiddenfield.min.js") : Url("hiddenfield.js");
                        public static readonly string radio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/radio.min.js") ? Url("radio.min.js") : Url("radio.js");
                        public static readonly string select_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select.min.js") ? Url("select.min.js") : Url("select.js");
                        public static readonly string textarea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textarea.min.js") ? Url("textarea.min.js") : Url("textarea.js");
                        public static readonly string textfield_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textfield.min.js") ? Url("textfield.min.js") : Url("textfield.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/forms/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string hiddenfield_gif = Url("hiddenfield.gif");
                    }
                
                }
            
                public static readonly string icons_png = Url("icons.png");
                public static readonly string icons_hidpi_png = Url("icons_hidpi.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class iframe {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/iframe";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/iframe/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string iframe_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/iframe.min.js") ? Url("iframe.min.js") : Url("iframe.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/iframe/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string placeholder_png = Url("placeholder.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class image {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/image";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/image/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/image.min.js") ? Url("image.min.js") : Url("image.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/image/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string noimage_png = Url("noimage.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class lineutils {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/lineutils";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class link {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/link";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/link/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string anchor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/anchor.min.js") ? Url("anchor.min.js") : Url("anchor.js");
                        public static readonly string link_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/link.min.js") ? Url("link.min.js") : Url("link.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/link/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string anchor_png = Url("anchor.png");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Scripts/ckeditor/plugins/link/images/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string anchor_png = Url("anchor.png");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class liststyle {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/liststyle";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/liststyle/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string liststyle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/liststyle.min.js") ? Url("liststyle.min.js") : Url("liststyle.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class magicline {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/magicline";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/magicline/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Scripts/ckeditor/plugins/magicline/images/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string icon_rtl_png = Url("icon-rtl.png");
                            public static readonly string icon_png = Url("icon.png");
                        }
                    
                        public static readonly string icon_rtl_png = Url("icon-rtl.png");
                        public static readonly string icon_png = Url("icon.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class mathjax {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/mathjax";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class notification {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/notification";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class notificationaggregator {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/notificationaggregator";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pagebreak {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/pagebreak";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/pagebreak/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string pagebreak_gif = Url("pagebreak.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pastefromword {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/pastefromword";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class filter {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/pastefromword/filter";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class preview {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/preview";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string preview_html = Url("preview.html");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class scayt {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/scayt";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/scayt/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string options_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/options.min.js") ? Url("options.min.js") : Url("options.js");
                        public static readonly string toolbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toolbar.min.css") ? Url("toolbar.min.css") : Url("toolbar.css");
                    }
                
                    public static readonly string LICENSE_md = Url("LICENSE.md");
                    public static readonly string README_md = Url("README.md");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class showblocks {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/showblocks";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/showblocks/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string block_address_png = Url("block_address.png");
                        public static readonly string block_blockquote_png = Url("block_blockquote.png");
                        public static readonly string block_div_png = Url("block_div.png");
                        public static readonly string block_h1_png = Url("block_h1.png");
                        public static readonly string block_h2_png = Url("block_h2.png");
                        public static readonly string block_h3_png = Url("block_h3.png");
                        public static readonly string block_h4_png = Url("block_h4.png");
                        public static readonly string block_h5_png = Url("block_h5.png");
                        public static readonly string block_h6_png = Url("block_h6.png");
                        public static readonly string block_p_png = Url("block_p.png");
                        public static readonly string block_pre_png = Url("block_pre.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class smiley {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/smiley";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/smiley/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string smiley_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/smiley.min.js") ? Url("smiley.min.js") : Url("smiley.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/smiley/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string angel_smile_gif = Url("angel_smile.gif");
                        public static readonly string angel_smile_png = Url("angel_smile.png");
                        public static readonly string angry_smile_gif = Url("angry_smile.gif");
                        public static readonly string angry_smile_png = Url("angry_smile.png");
                        public static readonly string broken_heart_gif = Url("broken_heart.gif");
                        public static readonly string broken_heart_png = Url("broken_heart.png");
                        public static readonly string confused_smile_gif = Url("confused_smile.gif");
                        public static readonly string confused_smile_png = Url("confused_smile.png");
                        public static readonly string cry_smile_gif = Url("cry_smile.gif");
                        public static readonly string cry_smile_png = Url("cry_smile.png");
                        public static readonly string devil_smile_gif = Url("devil_smile.gif");
                        public static readonly string devil_smile_png = Url("devil_smile.png");
                        public static readonly string embaressed_smile_gif = Url("embaressed_smile.gif");
                        public static readonly string embarrassed_smile_gif = Url("embarrassed_smile.gif");
                        public static readonly string embarrassed_smile_png = Url("embarrassed_smile.png");
                        public static readonly string envelope_gif = Url("envelope.gif");
                        public static readonly string envelope_png = Url("envelope.png");
                        public static readonly string heart_gif = Url("heart.gif");
                        public static readonly string heart_png = Url("heart.png");
                        public static readonly string kiss_gif = Url("kiss.gif");
                        public static readonly string kiss_png = Url("kiss.png");
                        public static readonly string lightbulb_gif = Url("lightbulb.gif");
                        public static readonly string lightbulb_png = Url("lightbulb.png");
                        public static readonly string omg_smile_gif = Url("omg_smile.gif");
                        public static readonly string omg_smile_png = Url("omg_smile.png");
                        public static readonly string regular_smile_gif = Url("regular_smile.gif");
                        public static readonly string regular_smile_png = Url("regular_smile.png");
                        public static readonly string sad_smile_gif = Url("sad_smile.gif");
                        public static readonly string sad_smile_png = Url("sad_smile.png");
                        public static readonly string shades_smile_gif = Url("shades_smile.gif");
                        public static readonly string shades_smile_png = Url("shades_smile.png");
                        public static readonly string teeth_smile_gif = Url("teeth_smile.gif");
                        public static readonly string teeth_smile_png = Url("teeth_smile.png");
                        public static readonly string thumbs_down_gif = Url("thumbs_down.gif");
                        public static readonly string thumbs_down_png = Url("thumbs_down.png");
                        public static readonly string thumbs_up_gif = Url("thumbs_up.gif");
                        public static readonly string thumbs_up_png = Url("thumbs_up.png");
                        public static readonly string tongue_smile_gif = Url("tongue_smile.gif");
                        public static readonly string tongue_smile_png = Url("tongue_smile.png");
                        public static readonly string tounge_smile_gif = Url("tounge_smile.gif");
                        public static readonly string whatchutalkingabout_smile_gif = Url("whatchutalkingabout_smile.gif");
                        public static readonly string whatchutalkingabout_smile_png = Url("whatchutalkingabout_smile.png");
                        public static readonly string wink_smile_gif = Url("wink_smile.gif");
                        public static readonly string wink_smile_png = Url("wink_smile.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class specialchar {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/specialchar";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/specialchar/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class lang {
                            private const string URLPATH = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                            public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                            public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                            public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                            public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                            public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                            public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                            public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                            public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                            public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                            public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                            public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                            public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                            public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                            public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                            public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                            public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                            public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                            public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                            public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                            public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                            public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                            public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                            public static readonly string id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/id.min.js") ? Url("id.min.js") : Url("id.js");
                            public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                            public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                            public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                            public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                            public static readonly string ku_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ku.min.js") ? Url("ku.min.js") : Url("ku.js");
                            public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
                            public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                            public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                            public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                            public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                            public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                            public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                            public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                            public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                            public static readonly string si_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/si.min.js") ? Url("si.min.js") : Url("si.js");
                            public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                            public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                            public static readonly string sq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sq.min.js") ? Url("sq.min.js") : Url("sq.js");
                            public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                            public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/th.min.js") ? Url("th.min.js") : Url("th.js");
                            public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                            public static readonly string tt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tt.min.js") ? Url("tt.min.js") : Url("tt.js");
                            public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                            public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                            public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                            public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                            public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
                        }
                    
                        public static readonly string specialchar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/specialchar.min.js") ? Url("specialchar.min.js") : Url("specialchar.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class table {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/table";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/table/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string table_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/table.min.js") ? Url("table.min.js") : Url("table.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tabletools {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/tabletools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/tabletools/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string tableCell_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tableCell.min.js") ? Url("tableCell.min.js") : Url("tableCell.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class templates {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/templates";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/templates/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                        public static readonly string templates_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.js") ? Url("templates.min.js") : Url("templates.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class templates_ {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/templates/templates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Scripts/ckeditor/plugins/templates/templates/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string template1_gif = Url("template1.gif");
                            public static readonly string template2_gif = Url("template2.gif");
                            public static readonly string template3_gif = Url("template3.gif");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class toolbar {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/toolbar";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class uploadimage {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/uploadimage";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class uploadwidget {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/uploadwidget";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class widget {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/widget";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class wsc {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/wsc";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/wsc/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ciframe_html = Url("ciframe.html");
                        public static readonly string tmpFrameset_html = Url("tmpFrameset.html");
                        public static readonly string wsc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc.min.css") ? Url("wsc.min.css") : Url("wsc.css");
                        public static readonly string wsc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc.min.js") ? Url("wsc.min.js") : Url("wsc.js");
                        public static readonly string wsc_ie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc_ie.min.js") ? Url("wsc_ie.min.js") : Url("wsc_ie.js");
                    }
                
                    public static readonly string LICENSE_md = Url("LICENSE.md");
                    public static readonly string README_md = Url("README.md");
                }
            
            }
        
            public static readonly string README_md = Url("README.md");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class samples {
                private const string URLPATH = "~/Scripts/ckeditor/samples";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class css {
                    private const string URLPATH = "~/Scripts/ckeditor/samples/css";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string samples_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/samples.min.css") ? Url("samples.min.css") : Url("samples.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class img {
                    private const string URLPATH = "~/Scripts/ckeditor/samples/img";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string github_top_png = Url("github-top.png");
                    public static readonly string header_bg_png = Url("header-bg.png");
                    public static readonly string header_separator_png = Url("header-separator.png");
                    public static readonly string logo_png = Url("logo.png");
                    public static readonly string navigation_tip_png = Url("navigation-tip.png");
                }
            
                public static readonly string index_html = Url("index.html");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class js {
                    private const string URLPATH = "~/Scripts/ckeditor/samples/js";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string sample_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sample.min.js") ? Url("sample.min.js") : Url("sample.js");
                    public static readonly string sf_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sf.min.js") ? Url("sf.min.js") : Url("sf.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class old {
                    private const string URLPATH = "~/Scripts/ckeditor/samples/old";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ajax_html = Url("ajax.html");
                    public static readonly string api_html = Url("api.html");
                    public static readonly string appendto_html = Url("appendto.html");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class assets {
                        private const string URLPATH = "~/Scripts/ckeditor/samples/old/assets";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class inlineall {
                            private const string URLPATH = "~/Scripts/ckeditor/samples/old/assets/inlineall";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string logo_png = Url("logo.png");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class outputxhtml {
                            private const string URLPATH = "~/Scripts/ckeditor/samples/old/assets/outputxhtml";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string outputxhtml_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/outputxhtml.min.css") ? Url("outputxhtml.min.css") : Url("outputxhtml.css");
                        }
                    
                        public static readonly string posteddata_php = Url("posteddata.php");
                        public static readonly string sample_jpg = Url("sample.jpg");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class uilanguages {
                            private const string URLPATH = "~/Scripts/ckeditor/samples/old/assets/uilanguages";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string languages_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/languages.min.js") ? Url("languages.min.js") : Url("languages.js");
                        }
                    
                    }
                
                    public static readonly string datafiltering_html = Url("datafiltering.html");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialog {
                        private const string URLPATH = "~/Scripts/ckeditor/samples/old/dialog";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class assets {
                            private const string URLPATH = "~/Scripts/ckeditor/samples/old/dialog/assets";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string my_dialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/my_dialog.min.js") ? Url("my_dialog.min.js") : Url("my_dialog.js");
                        }
                    
                        public static readonly string dialog_html = Url("dialog.html");
                    }
                
                    public static readonly string divreplace_html = Url("divreplace.html");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class enterkey {
                        private const string URLPATH = "~/Scripts/ckeditor/samples/old/enterkey";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string enterkey_html = Url("enterkey.html");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class htmlwriter {
                        private const string URLPATH = "~/Scripts/ckeditor/samples/old/htmlwriter";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class assets {
                            private const string URLPATH = "~/Scripts/ckeditor/samples/old/htmlwriter/assets";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class outputforflash {
                                private const string URLPATH = "~/Scripts/ckeditor/samples/old/htmlwriter/assets/outputforflash";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string outputforflash_fla = Url("outputforflash.fla");
                                public static readonly string outputforflash_swf = Url("outputforflash.swf");
                                public static readonly string swfobject_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/swfobject.min.js") ? Url("swfobject.min.js") : Url("swfobject.js");
                            }
                        
                        }
                    
                        public static readonly string outputforflash_html = Url("outputforflash.html");
                        public static readonly string outputhtml_html = Url("outputhtml.html");
                    }
                
                    public static readonly string index_html = Url("index.html");
                    public static readonly string inlineall_html = Url("inlineall.html");
                    public static readonly string inlinebycode_html = Url("inlinebycode.html");
                    public static readonly string inlinetextarea_html = Url("inlinetextarea.html");
                    public static readonly string jquery_html = Url("jquery.html");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class magicline {
                        private const string URLPATH = "~/Scripts/ckeditor/samples/old/magicline";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string magicline_html = Url("magicline.html");
                    }
                
                    public static readonly string readonly_html = Url("readonly.html");
                    public static readonly string replacebyclass_html = Url("replacebyclass.html");
                    public static readonly string replacebycode_html = Url("replacebycode.html");
                    public static readonly string sample_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sample.min.css") ? Url("sample.min.css") : Url("sample.css");
                    public static readonly string sample_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sample.min.js") ? Url("sample.min.js") : Url("sample.js");
                    public static readonly string sample_posteddata_php = Url("sample_posteddata.php");
                    public static readonly string tabindex_html = Url("tabindex.html");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class toolbar {
                        private const string URLPATH = "~/Scripts/ckeditor/samples/old/toolbar";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string toolbar_html = Url("toolbar.html");
                    }
                
                    public static readonly string uicolor_html = Url("uicolor.html");
                    public static readonly string uilanguages_html = Url("uilanguages.html");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class wysiwygarea {
                        private const string URLPATH = "~/Scripts/ckeditor/samples/old/wysiwygarea";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string fullpage_html = Url("fullpage.html");
                    }
                
                    public static readonly string xhtmlstyle_html = Url("xhtmlstyle.html");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class toolbarconfigurator {
                    private const string URLPATH = "~/Scripts/ckeditor/samples/toolbarconfigurator";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/Scripts/ckeditor/samples/toolbarconfigurator/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string fontello_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fontello.min.css") ? Url("fontello.min.css") : Url("fontello.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class font {
                        private const string URLPATH = "~/Scripts/ckeditor/samples/toolbarconfigurator/font";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string config_json = Url("config.json");
                        public static readonly string fontello_eot = Url("fontello.eot");
                        public static readonly string fontello_svg = Url("fontello.svg");
                        public static readonly string fontello_ttf = Url("fontello.ttf");
                        public static readonly string fontello_woff = Url("fontello.woff");
                        public static readonly string LICENSE_txt = Url("LICENSE.txt");
                    }
                
                    public static readonly string index_html = Url("index.html");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/Scripts/ckeditor/samples/toolbarconfigurator/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string abstracttoolbarmodifier_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/abstracttoolbarmodifier.min.js") ? Url("abstracttoolbarmodifier.min.js") : Url("abstracttoolbarmodifier.js");
                        public static readonly string fulltoolbareditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fulltoolbareditor.min.js") ? Url("fulltoolbareditor.min.js") : Url("fulltoolbareditor.js");
                        public static readonly string toolbarmodifier_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toolbarmodifier.min.js") ? Url("toolbarmodifier.min.js") : Url("toolbarmodifier.js");
                        public static readonly string toolbartextmodifier_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toolbartextmodifier.min.js") ? Url("toolbartextmodifier.min.js") : Url("toolbartextmodifier.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lib {
                        private const string URLPATH = "~/Scripts/ckeditor/samples/toolbarconfigurator/lib";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class codemirror {
                            private const string URLPATH = "~/Scripts/ckeditor/samples/toolbarconfigurator/lib/codemirror";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string codemirror_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/codemirror.min.css") ? Url("codemirror.min.css") : Url("codemirror.css");
                            public static readonly string codemirror_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/codemirror.min.js") ? Url("codemirror.min.js") : Url("codemirror.js");
                            public static readonly string javascript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/javascript.min.js") ? Url("javascript.min.js") : Url("javascript.js");
                            public static readonly string LICENSE = Url("LICENSE");
                            public static readonly string neo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/neo.min.css") ? Url("neo.min.css") : Url("neo.css");
                            public static readonly string show_hint_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/show-hint.min.css") ? Url("show-hint.min.css") : Url("show-hint.css");
                            public static readonly string show_hint_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/show-hint.min.js") ? Url("show-hint.min.js") : Url("show-hint.js");
                        }
                    
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skins {
                private const string URLPATH = "~/Scripts/ckeditor/skins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class moono {
                    private const string URLPATH = "~/Scripts/ckeditor/skins/moono";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string dialog_ie_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog_ie.min.css") ? Url("dialog_ie.min.css") : Url("dialog_ie.css");
                    public static readonly string dialog_ie7_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog_ie7.min.css") ? Url("dialog_ie7.min.css") : Url("dialog_ie7.css");
                    public static readonly string dialog_ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog_ie8.min.css") ? Url("dialog_ie8.min.css") : Url("dialog_ie8.css");
                    public static readonly string dialog_iequirks_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog_iequirks.min.css") ? Url("dialog_iequirks.min.css") : Url("dialog_iequirks.css");
                    public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                    public static readonly string editor_gecko_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_gecko.min.css") ? Url("editor_gecko.min.css") : Url("editor_gecko.css");
                    public static readonly string editor_ie_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_ie.min.css") ? Url("editor_ie.min.css") : Url("editor_ie.css");
                    public static readonly string editor_ie7_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_ie7.min.css") ? Url("editor_ie7.min.css") : Url("editor_ie7.css");
                    public static readonly string editor_ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_ie8.min.css") ? Url("editor_ie8.min.css") : Url("editor_ie8.css");
                    public static readonly string editor_iequirks_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_iequirks.min.css") ? Url("editor_iequirks.min.css") : Url("editor_iequirks.css");
                    public static readonly string icons_png = Url("icons.png");
                    public static readonly string icons_hidpi_png = Url("icons_hidpi.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/skins/moono/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string arrow_png = Url("arrow.png");
                        public static readonly string close_png = Url("close.png");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class hidpi {
                            private const string URLPATH = "~/Scripts/ckeditor/skins/moono/images/hidpi";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string close_png = Url("close.png");
                            public static readonly string lock_open_png = Url("lock-open.png");
                            public static readonly string lock_png = Url("lock.png");
                            public static readonly string refresh_png = Url("refresh.png");
                        }
                    
                        public static readonly string lock_open_png = Url("lock-open.png");
                        public static readonly string lock_png = Url("lock.png");
                        public static readonly string refresh_png = Url("refresh.png");
                        public static readonly string spinner_gif = Url("spinner.gif");
                    }
                
                    public static readonly string readme_md = Url("readme.md");
                }
            
            }
        
            public static readonly string styles_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/styles.min.js") ? Url("styles.min.js") : Url("styles.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class DatetimePicker {
            private const string URLPATH = "~/Scripts/DatetimePicker";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string _gitignore = Url(".gitignore");
            public static readonly string bower_json = Url("bower.json");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class build {
                private const string URLPATH = "~/Scripts/DatetimePicker/build";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_datetimepicker_full_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.datetimepicker.full.min.js") ? Url("jquery.datetimepicker.full.min.js") : Url("jquery.datetimepicker.full.js");
                public static readonly string jquery_datetimepicker_full_min_js = Url("jquery.datetimepicker.full.min.js");
                public static readonly string jquery_datetimepicker_min_js = Url("jquery.datetimepicker.min.js");
            }
        
            public static readonly string datetimepicker_jquery_json = Url("datetimepicker.jquery.json");
            public static readonly string index_html = Url("index.html");
            public static readonly string jquery_datetimepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.datetimepicker.min.css") ? Url("jquery.datetimepicker.min.css") : Url("jquery.datetimepicker.css");
            public static readonly string jquery_datetimepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.datetimepicker.min.js") ? Url("jquery.datetimepicker.min.js") : Url("jquery.datetimepicker.js");
            public static readonly string jquery_datetimepicker_min_js = Url("jquery.datetimepicker.min.js");
            public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
            public static readonly string MIT_LICENSE_txt = Url("MIT-LICENSE.txt");
            public static readonly string package_json = Url("package.json");
            public static readonly string README_md = Url("README.md");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class screen {
                private const string URLPATH = "~/Scripts/DatetimePicker/screen";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _1_png = Url("1.png");
                public static readonly string _2_png = Url("2.png");
                public static readonly string _3_1_png = Url("3.1.png");
                public static readonly string _3_png = Url("3.png");
                public static readonly string _4_png = Url("4.png");
                public static readonly string _5_png = Url("5.png");
                public static readonly string _6_png = Url("6.png");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Debugger {
            private const string URLPATH = "~/Scripts/Debugger";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string Alerter_coffee = Url("Alerter.coffee");
            public static readonly string Alerter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Alerter.min.js") ? Url("Alerter.min.js") : Url("Alerter.js");
        }
    
        public static readonly string dsf_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dsf.min.js") ? Url("dsf.min.js") : Url("dsf.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class easyui14 {
            private const string URLPATH = "~/Scripts/easyui14";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string easyloader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyloader.min.js") ? Url("easyloader.min.js") : Url("easyloader.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class extension {
                private const string URLPATH = "~/Scripts/easyui14/extension";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class datagrid_dnd {
                    private const string URLPATH = "~/Scripts/easyui14/extension/datagrid-dnd";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string datagrid_dnd_html = Url("datagrid-dnd.html");
                    public static readonly string datagrid_dnd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid-dnd.min.js") ? Url("datagrid-dnd.min.js") : Url("datagrid-dnd.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class datagrid_filter {
                    private const string URLPATH = "~/Scripts/easyui14/extension/datagrid-filter";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string datagrid_filter_html = Url("datagrid-filter.html");
                    public static readonly string datagrid_filter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid-filter.min.js") ? Url("datagrid-filter.min.js") : Url("datagrid-filter.js");
                    public static readonly string filter_png = Url("filter.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class jquery_easyui_datagridview {
                    private const string URLPATH = "~/Scripts/easyui14/extension/jquery-easyui-datagridview";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string datagrid_bufferview_html = Url("datagrid-bufferview.html");
                    public static readonly string datagrid_bufferview_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid-bufferview.min.js") ? Url("datagrid-bufferview.min.js") : Url("datagrid-bufferview.js");
                    public static readonly string datagrid_defaultview_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid-defaultview.min.js") ? Url("datagrid-defaultview.min.js") : Url("datagrid-defaultview.js");
                    public static readonly string datagrid_detailview_html = Url("datagrid-detailview.html");
                    public static readonly string datagrid_detailview_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid-detailview.min.js") ? Url("datagrid-detailview.min.js") : Url("datagrid-detailview.js");
                    public static readonly string datagrid_groupview_html = Url("datagrid-groupview.html");
                    public static readonly string datagrid_groupview_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid-groupview.min.js") ? Url("datagrid-groupview.min.js") : Url("datagrid-groupview.js");
                    public static readonly string datagrid_scrollview_html = Url("datagrid-scrollview.html");
                    public static readonly string datagrid_scrollview_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid-scrollview.min.js") ? Url("datagrid-scrollview.min.js") : Url("datagrid-scrollview.js");
                    public static readonly string datagrid_scrollview2_html = Url("datagrid-scrollview2.html");
                    public static readonly string datagrid_data_json = Url("datagrid_data.json");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class jquery_easyui_dwrloader {
                    private const string URLPATH = "~/Scripts/easyui14/extension/jquery-easyui-dwrloader";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dwr {
                        private const string URLPATH = "~/Scripts/easyui14/extension/jquery-easyui-dwrloader/dwr";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string engine_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/engine.min.js") ? Url("engine.min.js") : Url("engine.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class @interface {
                            private const string URLPATH = "~/Scripts/easyui14/extension/jquery-easyui-dwrloader/dwr/interface";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string MyDwr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MyDwr.min.js") ? Url("MyDwr.min.js") : Url("MyDwr.js");
                        }
                    
                        public static readonly string util_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/util.min.js") ? Url("util.min.js") : Url("util.js");
                    }
                
                    public static readonly string dwrloader_html = Url("dwrloader.html");
                    public static readonly string dwrloader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dwrloader.min.js") ? Url("dwrloader.min.js") : Url("dwrloader.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class jquery_easyui_edatagrid {
                    private const string URLPATH = "~/Scripts/easyui14/extension/jquery-easyui-edatagrid";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string datagrid_data_json = Url("datagrid_data.json");
                    public static readonly string editable_datagrid_html = Url("editable-datagrid.html");
                    public static readonly string jquery_edatagrid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.edatagrid.min.js") ? Url("jquery.edatagrid.min.js") : Url("jquery.edatagrid.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class jquery_easyui_etree {
                    private const string URLPATH = "~/Scripts/easyui14/extension/jquery-easyui-etree";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editable_tree_html = Url("editable-tree.html");
                    public static readonly string jquery_etree_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.etree.min.js") ? Url("jquery.etree.min.js") : Url("jquery.etree.js");
                    public static readonly string jquery_etree_lang_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.etree.lang.min.js") ? Url("jquery.etree.lang.min.js") : Url("jquery.etree.lang.js");
                    public static readonly string tree_data_json = Url("tree_data.json");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class jquery_easyui_portal {
                    private const string URLPATH = "~/Scripts/easyui14/extension/jquery-easyui-portal";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string datagrid_data_json = Url("datagrid_data.json");
                    public static readonly string jquery_portal_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.portal.min.js") ? Url("jquery.portal.min.js") : Url("jquery.portal.js");
                    public static readonly string portal_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/portal.min.css") ? Url("portal.min.css") : Url("portal.css");
                    public static readonly string portal_html = Url("portal.html");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class jquery_easyui_ribbon {
                    private const string URLPATH = "~/Scripts/easyui14/extension/jquery-easyui-ribbon";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/easyui14/extension/jquery-easyui-ribbon/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class _16 {
                            private const string URLPATH = "~/Scripts/easyui14/extension/jquery-easyui-ribbon/images/16";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string align_center_png = Url("align-center.png");
                            public static readonly string align_justify_png = Url("align-justify.png");
                            public static readonly string align_left_png = Url("align-left.png");
                            public static readonly string align_right_png = Url("align-right.png");
                            public static readonly string bold_png = Url("bold.png");
                            public static readonly string bullets_png = Url("bullets.png");
                            public static readonly string case_font_png = Url("case-font.png");
                            public static readonly string copy_png = Url("copy.png");
                            public static readonly string decrease_font_png = Url("decrease-font.png");
                            public static readonly string find_png = Url("find.png");
                            public static readonly string format_png = Url("format.png");
                            public static readonly string go_png = Url("go.png");
                            public static readonly string grow_font_png = Url("grow-font.png");
                            public static readonly string increase_font_png = Url("increase-font.png");
                            public static readonly string italic_png = Url("italic.png");
                            public static readonly string numbers_png = Url("numbers.png");
                            public static readonly string paste_png = Url("paste.png");
                            public static readonly string replace_png = Url("replace.png");
                            public static readonly string select_png = Url("select.png");
                            public static readonly string selectall_png = Url("selectall.png");
                            public static readonly string shrink_font_png = Url("shrink-font.png");
                            public static readonly string strikethrough_png = Url("strikethrough.png");
                            public static readonly string subscript_png = Url("subscript.png");
                            public static readonly string superscript_png = Url("superscript.png");
                            public static readonly string underline_png = Url("underline.png");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class _32 {
                            private const string URLPATH = "~/Scripts/easyui14/extension/jquery-easyui-ribbon/images/32";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string chart_png = Url("chart.png");
                            public static readonly string clipart_png = Url("clipart.png");
                            public static readonly string paste_png = Url("paste.png");
                            public static readonly string picture_png = Url("picture.png");
                            public static readonly string shapes_png = Url("shapes.png");
                            public static readonly string smartart_png = Url("smartart.png");
                            public static readonly string table_png = Url("table.png");
                        }
                    
                    }
                
                    public static readonly string jquery_ribbon_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ribbon.min.js") ? Url("jquery.ribbon.min.js") : Url("jquery.ribbon.js");
                    public static readonly string ribbon_icon_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ribbon-icon.min.css") ? Url("ribbon-icon.min.css") : Url("ribbon-icon.css");
                    public static readonly string ribbon_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ribbon.min.css") ? Url("ribbon.min.css") : Url("ribbon.css");
                    public static readonly string ribbon_html = Url("ribbon.html");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class jquery_easyui_rtl {
                    private const string URLPATH = "~/Scripts/easyui14/extension/jquery-easyui-rtl";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string content_html = Url("content.html");
                    public static readonly string datagrid_data1_json = Url("datagrid_data1.json");
                    public static readonly string easyui_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-rtl.min.css") ? Url("easyui-rtl.min.css") : Url("easyui-rtl.css");
                    public static readonly string easyui_rtl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-rtl.min.js") ? Url("easyui-rtl.min.js") : Url("easyui-rtl.js");
                    public static readonly string rtl_html = Url("rtl.html");
                    public static readonly string tree_data1_json = Url("tree_data1.json");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class treegrid_dnd {
                    private const string URLPATH = "~/Scripts/easyui14/extension/treegrid-dnd";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string treegrid_dnd_html = Url("treegrid-dnd.html");
                    public static readonly string treegrid_dnd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/treegrid-dnd.min.js") ? Url("treegrid-dnd.min.js") : Url("treegrid-dnd.js");
                }
            
            }
        
            public static readonly string jquery_easyui_min_js = Url("jquery.easyui.min.js");
            public static readonly string jquery_min_js = Url("jquery.min.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class locale {
                private const string URLPATH = "~/Scripts/easyui14/locale";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string easyui_lang_af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-af.min.js") ? Url("easyui-lang-af.min.js") : Url("easyui-lang-af.js");
                public static readonly string easyui_lang_am_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-am.min.js") ? Url("easyui-lang-am.min.js") : Url("easyui-lang-am.js");
                public static readonly string easyui_lang_ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-ar.min.js") ? Url("easyui-lang-ar.min.js") : Url("easyui-lang-ar.js");
                public static readonly string easyui_lang_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-bg.min.js") ? Url("easyui-lang-bg.min.js") : Url("easyui-lang-bg.js");
                public static readonly string easyui_lang_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-ca.min.js") ? Url("easyui-lang-ca.min.js") : Url("easyui-lang-ca.js");
                public static readonly string easyui_lang_cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-cs.min.js") ? Url("easyui-lang-cs.min.js") : Url("easyui-lang-cs.js");
                public static readonly string easyui_lang_cz_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-cz.min.js") ? Url("easyui-lang-cz.min.js") : Url("easyui-lang-cz.js");
                public static readonly string easyui_lang_da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-da.min.js") ? Url("easyui-lang-da.min.js") : Url("easyui-lang-da.js");
                public static readonly string easyui_lang_de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-de.min.js") ? Url("easyui-lang-de.min.js") : Url("easyui-lang-de.js");
                public static readonly string easyui_lang_el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-el.min.js") ? Url("easyui-lang-el.min.js") : Url("easyui-lang-el.js");
                public static readonly string easyui_lang_en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-en.min.js") ? Url("easyui-lang-en.min.js") : Url("easyui-lang-en.js");
                public static readonly string easyui_lang_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-es.min.js") ? Url("easyui-lang-es.min.js") : Url("easyui-lang-es.js");
                public static readonly string easyui_lang_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-fr.min.js") ? Url("easyui-lang-fr.min.js") : Url("easyui-lang-fr.js");
                public static readonly string easyui_lang_it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-it.min.js") ? Url("easyui-lang-it.min.js") : Url("easyui-lang-it.js");
                public static readonly string easyui_lang_jp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-jp.min.js") ? Url("easyui-lang-jp.min.js") : Url("easyui-lang-jp.js");
                public static readonly string easyui_lang_nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-nl.min.js") ? Url("easyui-lang-nl.min.js") : Url("easyui-lang-nl.js");
                public static readonly string easyui_lang_pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-pl.min.js") ? Url("easyui-lang-pl.min.js") : Url("easyui-lang-pl.js");
                public static readonly string easyui_lang_pt_BR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-pt_BR.min.js") ? Url("easyui-lang-pt_BR.min.js") : Url("easyui-lang-pt_BR.js");
                public static readonly string easyui_lang_ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-ru.min.js") ? Url("easyui-lang-ru.min.js") : Url("easyui-lang-ru.js");
                public static readonly string easyui_lang_sv_SE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-sv_SE.min.js") ? Url("easyui-lang-sv_SE.min.js") : Url("easyui-lang-sv_SE.js");
                public static readonly string easyui_lang_tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-tr.min.js") ? Url("easyui-lang-tr.min.js") : Url("easyui-lang-tr.js");
                public static readonly string easyui_lang_zh_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-zh_CN.min.js") ? Url("easyui-lang-zh_CN.min.js") : Url("easyui-lang-zh_CN.js");
                public static readonly string easyui_lang_zh_TW_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui-lang-zh_TW.min.js") ? Url("easyui-lang-zh_TW.min.js") : Url("easyui-lang-zh_TW.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Scripts/easyui14/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_accordion_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.accordion.min.js") ? Url("jquery.accordion.min.js") : Url("jquery.accordion.js");
                public static readonly string jquery_calendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.calendar.min.js") ? Url("jquery.calendar.min.js") : Url("jquery.calendar.js");
                public static readonly string jquery_combo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.combo.min.js") ? Url("jquery.combo.min.js") : Url("jquery.combo.js");
                public static readonly string jquery_combobox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.combobox.min.js") ? Url("jquery.combobox.min.js") : Url("jquery.combobox.js");
                public static readonly string jquery_combogrid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.combogrid.min.js") ? Url("jquery.combogrid.min.js") : Url("jquery.combogrid.js");
                public static readonly string jquery_combotree_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.combotree.min.js") ? Url("jquery.combotree.min.js") : Url("jquery.combotree.js");
                public static readonly string jquery_datagrid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.datagrid.min.js") ? Url("jquery.datagrid.min.js") : Url("jquery.datagrid.js");
                public static readonly string jquery_datebox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.datebox.min.js") ? Url("jquery.datebox.min.js") : Url("jquery.datebox.js");
                public static readonly string jquery_datetimebox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.datetimebox.min.js") ? Url("jquery.datetimebox.min.js") : Url("jquery.datetimebox.js");
                public static readonly string jquery_datetimespinner_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.datetimespinner.min.js") ? Url("jquery.datetimespinner.min.js") : Url("jquery.datetimespinner.js");
                public static readonly string jquery_dialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dialog.min.js") ? Url("jquery.dialog.min.js") : Url("jquery.dialog.js");
                public static readonly string jquery_draggable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.draggable.min.js") ? Url("jquery.draggable.min.js") : Url("jquery.draggable.js");
                public static readonly string jquery_droppable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.droppable.min.js") ? Url("jquery.droppable.min.js") : Url("jquery.droppable.js");
                public static readonly string jquery_filebox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.filebox.min.js") ? Url("jquery.filebox.min.js") : Url("jquery.filebox.js");
                public static readonly string jquery_form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.form.min.js") ? Url("jquery.form.min.js") : Url("jquery.form.js");
                public static readonly string jquery_layout_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.layout.min.js") ? Url("jquery.layout.min.js") : Url("jquery.layout.js");
                public static readonly string jquery_linkbutton_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.linkbutton.min.js") ? Url("jquery.linkbutton.min.js") : Url("jquery.linkbutton.js");
                public static readonly string jquery_menu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.menu.min.js") ? Url("jquery.menu.min.js") : Url("jquery.menu.js");
                public static readonly string jquery_menubutton_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.menubutton.min.js") ? Url("jquery.menubutton.min.js") : Url("jquery.menubutton.js");
                public static readonly string jquery_messager_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.messager.min.js") ? Url("jquery.messager.min.js") : Url("jquery.messager.js");
                public static readonly string jquery_numberbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.numberbox.min.js") ? Url("jquery.numberbox.min.js") : Url("jquery.numberbox.js");
                public static readonly string jquery_numberspinner_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.numberspinner.min.js") ? Url("jquery.numberspinner.min.js") : Url("jquery.numberspinner.js");
                public static readonly string jquery_pagination_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.pagination.min.js") ? Url("jquery.pagination.min.js") : Url("jquery.pagination.js");
                public static readonly string jquery_panel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.panel.min.js") ? Url("jquery.panel.min.js") : Url("jquery.panel.js");
                public static readonly string jquery_parser_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.parser.min.js") ? Url("jquery.parser.min.js") : Url("jquery.parser.js");
                public static readonly string jquery_progressbar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.progressbar.min.js") ? Url("jquery.progressbar.min.js") : Url("jquery.progressbar.js");
                public static readonly string jquery_propertygrid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.propertygrid.min.js") ? Url("jquery.propertygrid.min.js") : Url("jquery.propertygrid.js");
                public static readonly string jquery_resizable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.resizable.min.js") ? Url("jquery.resizable.min.js") : Url("jquery.resizable.js");
                public static readonly string jquery_searchbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.searchbox.min.js") ? Url("jquery.searchbox.min.js") : Url("jquery.searchbox.js");
                public static readonly string jquery_slider_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.slider.min.js") ? Url("jquery.slider.min.js") : Url("jquery.slider.js");
                public static readonly string jquery_spinner_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.spinner.min.js") ? Url("jquery.spinner.min.js") : Url("jquery.spinner.js");
                public static readonly string jquery_splitbutton_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.splitbutton.min.js") ? Url("jquery.splitbutton.min.js") : Url("jquery.splitbutton.js");
                public static readonly string jquery_tabs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.tabs.min.js") ? Url("jquery.tabs.min.js") : Url("jquery.tabs.js");
                public static readonly string jquery_textbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.textbox.min.js") ? Url("jquery.textbox.min.js") : Url("jquery.textbox.js");
                public static readonly string jquery_timespinner_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.timespinner.min.js") ? Url("jquery.timespinner.min.js") : Url("jquery.timespinner.js");
                public static readonly string jquery_tooltip_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.tooltip.min.js") ? Url("jquery.tooltip.min.js") : Url("jquery.tooltip.js");
                public static readonly string jquery_tree_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.tree.min.js") ? Url("jquery.tree.min.js") : Url("jquery.tree.js");
                public static readonly string jquery_treegrid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.treegrid.min.js") ? Url("jquery.treegrid.min.js") : Url("jquery.treegrid.js");
                public static readonly string jquery_validatebox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validatebox.min.js") ? Url("jquery.validatebox.min.js") : Url("jquery.validatebox.js");
                public static readonly string jquery_window_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.window.min.js") ? Url("jquery.window.min.js") : Url("jquery.window.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class src {
                private const string URLPATH = "~/Scripts/easyui14/src";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string easyloader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyloader.min.js") ? Url("easyloader.min.js") : Url("easyloader.js");
                public static readonly string jquery_accordion_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.accordion.min.js") ? Url("jquery.accordion.min.js") : Url("jquery.accordion.js");
                public static readonly string jquery_calendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.calendar.min.js") ? Url("jquery.calendar.min.js") : Url("jquery.calendar.js");
                public static readonly string jquery_combobox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.combobox.min.js") ? Url("jquery.combobox.min.js") : Url("jquery.combobox.js");
                public static readonly string jquery_datebox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.datebox.min.js") ? Url("jquery.datebox.min.js") : Url("jquery.datebox.js");
                public static readonly string jquery_draggable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.draggable.min.js") ? Url("jquery.draggable.min.js") : Url("jquery.draggable.js");
                public static readonly string jquery_droppable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.droppable.min.js") ? Url("jquery.droppable.min.js") : Url("jquery.droppable.js");
                public static readonly string jquery_form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.form.min.js") ? Url("jquery.form.min.js") : Url("jquery.form.js");
                public static readonly string jquery_linkbutton_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.linkbutton.min.js") ? Url("jquery.linkbutton.min.js") : Url("jquery.linkbutton.js");
                public static readonly string jquery_menu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.menu.min.js") ? Url("jquery.menu.min.js") : Url("jquery.menu.js");
                public static readonly string jquery_parser_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.parser.min.js") ? Url("jquery.parser.min.js") : Url("jquery.parser.js");
                public static readonly string jquery_progressbar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.progressbar.min.js") ? Url("jquery.progressbar.min.js") : Url("jquery.progressbar.js");
                public static readonly string jquery_propertygrid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.propertygrid.min.js") ? Url("jquery.propertygrid.min.js") : Url("jquery.propertygrid.js");
                public static readonly string jquery_resizable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.resizable.min.js") ? Url("jquery.resizable.min.js") : Url("jquery.resizable.js");
                public static readonly string jquery_slider_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.slider.min.js") ? Url("jquery.slider.min.js") : Url("jquery.slider.js");
                public static readonly string jquery_tabs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.tabs.min.js") ? Url("jquery.tabs.min.js") : Url("jquery.tabs.js");
                public static readonly string jquery_window_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.window.min.js") ? Url("jquery.window.min.js") : Url("jquery.window.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class themes {
                private const string URLPATH = "~/Scripts/easyui14/themes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class black {
                    private const string URLPATH = "~/Scripts/easyui14/themes/black";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string filebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/filebox.min.css") ? Url("filebox.min.css") : Url("filebox.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/easyui14/themes/black/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                        public static readonly string blank_gif = Url("blank.gif");
                        public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                        public static readonly string combo_arrow_png = Url("combo_arrow.png");
                        public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                        public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                        public static readonly string layout_arrows_png = Url("layout_arrows.png");
                        public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                        public static readonly string loading_gif = Url("loading.gif");
                        public static readonly string menu_arrows_png = Url("menu_arrows.png");
                        public static readonly string messager_icons_png = Url("messager_icons.png");
                        public static readonly string pagination_icons_png = Url("pagination_icons.png");
                        public static readonly string panel_tools_png = Url("panel_tools.png");
                        public static readonly string searchbox_button_png = Url("searchbox_button.png");
                        public static readonly string slider_handle_png = Url("slider_handle.png");
                        public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                        public static readonly string tabs_icons_png = Url("tabs_icons.png");
                        public static readonly string tree_icons_png = Url("tree_icons.png");
                        public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    }
                
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class bootstrap {
                    private const string URLPATH = "~/Scripts/easyui14/themes/bootstrap";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string filebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/filebox.min.css") ? Url("filebox.min.css") : Url("filebox.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/easyui14/themes/bootstrap/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                        public static readonly string blank_gif = Url("blank.gif");
                        public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                        public static readonly string combo_arrow_png = Url("combo_arrow.png");
                        public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                        public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                        public static readonly string layout_arrows_png = Url("layout_arrows.png");
                        public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                        public static readonly string loading_gif = Url("loading.gif");
                        public static readonly string menu_arrows_png = Url("menu_arrows.png");
                        public static readonly string messager_icons_png = Url("messager_icons.png");
                        public static readonly string pagination_icons_png = Url("pagination_icons.png");
                        public static readonly string panel_tools_png = Url("panel_tools.png");
                        public static readonly string searchbox_button_png = Url("searchbox_button.png");
                        public static readonly string slider_handle_png = Url("slider_handle.png");
                        public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                        public static readonly string tabs_icons_png = Url("tabs_icons.png");
                        public static readonly string tree_icons_png = Url("tree_icons.png");
                        public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    }
                
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                public static readonly string color_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/color.min.css") ? Url("color.min.css") : Url("color.css");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class @default {
                    private const string URLPATH = "~/Scripts/easyui14/themes/default";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string filebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/filebox.min.css") ? Url("filebox.min.css") : Url("filebox.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/easyui14/themes/default/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                        public static readonly string blank_gif = Url("blank.gif");
                        public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                        public static readonly string combo_arrow_png = Url("combo_arrow.png");
                        public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                        public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                        public static readonly string layout_arrows_png = Url("layout_arrows.png");
                        public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                        public static readonly string loading_gif = Url("loading.gif");
                        public static readonly string menu_arrows_png = Url("menu_arrows.png");
                        public static readonly string messager_icons_png = Url("messager_icons.png");
                        public static readonly string pagination_icons_png = Url("pagination_icons.png");
                        public static readonly string panel_tools_png = Url("panel_tools.png");
                        public static readonly string searchbox_button_png = Url("searchbox_button.png");
                        public static readonly string slider_handle_png = Url("slider_handle.png");
                        public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                        public static readonly string tabs_icons_png = Url("tabs_icons.png");
                        public static readonly string tree_icons_png = Url("tree_icons.png");
                        public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    }
                
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class gray {
                    private const string URLPATH = "~/Scripts/easyui14/themes/gray";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string filebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/filebox.min.css") ? Url("filebox.min.css") : Url("filebox.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/easyui14/themes/gray/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                        public static readonly string blank_gif = Url("blank.gif");
                        public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                        public static readonly string combo_arrow_png = Url("combo_arrow.png");
                        public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                        public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                        public static readonly string layout_arrows_png = Url("layout_arrows.png");
                        public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                        public static readonly string loading_gif = Url("loading.gif");
                        public static readonly string menu_arrows_png = Url("menu_arrows.png");
                        public static readonly string messager_icons_png = Url("messager_icons.png");
                        public static readonly string pagination_icons_png = Url("pagination_icons.png");
                        public static readonly string panel_tools_png = Url("panel_tools.png");
                        public static readonly string searchbox_button_png = Url("searchbox_button.png");
                        public static readonly string slider_handle_png = Url("slider_handle.png");
                        public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                        public static readonly string tabs_icons_png = Url("tabs_icons.png");
                        public static readonly string tree_icons_png = Url("tree_icons.png");
                        public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    }
                
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                public static readonly string icon_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/icon.min.css") ? Url("icon.min.css") : Url("icon.css");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class icons {
                    private const string URLPATH = "~/Scripts/easyui14/themes/icons";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string back_png = Url("back.png");
                    public static readonly string blank_gif = Url("blank.gif");
                    public static readonly string cancel_png = Url("cancel.png");
                    public static readonly string clear_png = Url("clear.png");
                    public static readonly string cut_png = Url("cut.png");
                    public static readonly string edit_add_png = Url("edit_add.png");
                    public static readonly string edit_remove_png = Url("edit_remove.png");
                    public static readonly string filesave_png = Url("filesave.png");
                    public static readonly string filter_png = Url("filter.png");
                    public static readonly string help_png = Url("help.png");
                    public static readonly string large_chart_png = Url("large_chart.png");
                    public static readonly string large_clipart_png = Url("large_clipart.png");
                    public static readonly string large_picture_png = Url("large_picture.png");
                    public static readonly string large_shapes_png = Url("large_shapes.png");
                    public static readonly string large_smartart_png = Url("large_smartart.png");
                    public static readonly string lock_png = Url("lock.png");
                    public static readonly string man_png = Url("man.png");
                    public static readonly string mini_add_png = Url("mini_add.png");
                    public static readonly string mini_edit_png = Url("mini_edit.png");
                    public static readonly string mini_refresh_png = Url("mini_refresh.png");
                    public static readonly string no_png = Url("no.png");
                    public static readonly string ok_png = Url("ok.png");
                    public static readonly string pencil_png = Url("pencil.png");
                    public static readonly string print_png = Url("print.png");
                    public static readonly string redo_png = Url("redo.png");
                    public static readonly string reload_png = Url("reload.png");
                    public static readonly string search_png = Url("search.png");
                    public static readonly string sum_png = Url("sum.png");
                    public static readonly string tip_png = Url("tip.png");
                    public static readonly string undo_png = Url("undo.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class metro {
                    private const string URLPATH = "~/Scripts/easyui14/themes/metro";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string filebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/filebox.min.css") ? Url("filebox.min.css") : Url("filebox.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/easyui14/themes/metro/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                        public static readonly string blank_gif = Url("blank.gif");
                        public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                        public static readonly string combo_arrow_png = Url("combo_arrow.png");
                        public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                        public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                        public static readonly string layout_arrows_png = Url("layout_arrows.png");
                        public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                        public static readonly string loading_gif = Url("loading.gif");
                        public static readonly string menu_arrows_png = Url("menu_arrows.png");
                        public static readonly string messager_icons_png = Url("messager_icons.png");
                        public static readonly string pagination_icons_png = Url("pagination_icons.png");
                        public static readonly string panel_tools_png = Url("panel_tools.png");
                        public static readonly string searchbox_button_png = Url("searchbox_button.png");
                        public static readonly string slider_handle_png = Url("slider_handle.png");
                        public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                        public static readonly string tabs_icons_png = Url("tabs_icons.png");
                        public static readonly string tree_icons_png = Url("tree_icons.png");
                        public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    }
                
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class metro_blue {
                    private const string URLPATH = "~/Scripts/easyui14/themes/metro-blue";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                    public static readonly string blank_gif = Url("blank.gif");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combo_arrow_png = Url("combo_arrow.png");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string layout_arrows_png = Url("layout_arrows.png");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menu_arrows_png = Url("menu_arrows.png");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string messager_icons_png = Url("messager_icons.png");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string pagination_icons_png = Url("pagination_icons.png");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string panel_tools_png = Url("panel_tools.png");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string searchbox_button_png = Url("searchbox_button.png");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string slider_handle_png = Url("slider_handle.png");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string tabs_icons_png = Url("tabs_icons.png");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string tree_icons_png = Url("tree_icons.png");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class metro_gray {
                    private const string URLPATH = "~/Scripts/easyui14/themes/metro-gray";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                    public static readonly string blank_gif = Url("blank.gif");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combo_arrow_png = Url("combo_arrow.png");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string layout_arrows_png = Url("layout_arrows.png");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menu_arrows_png = Url("menu_arrows.png");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string messager_icons_png = Url("messager_icons.png");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string pagination_icons_png = Url("pagination_icons.png");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string panel_tools_png = Url("panel_tools.png");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string searchbox_button_png = Url("searchbox_button.png");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string slider_handle_png = Url("slider_handle.png");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string tabs_icons_png = Url("tabs_icons.png");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string tree_icons_png = Url("tree_icons.png");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class metro_green {
                    private const string URLPATH = "~/Scripts/easyui14/themes/metro-green";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                    public static readonly string blank_gif = Url("blank.gif");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combo_arrow_png = Url("combo_arrow.png");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string layout_arrows_png = Url("layout_arrows.png");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menu_arrows_png = Url("menu_arrows.png");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string messager_icons_png = Url("messager_icons.png");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string pagination_icons_png = Url("pagination_icons.png");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string panel_tools_png = Url("panel_tools.png");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string searchbox_button_png = Url("searchbox_button.png");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string slider_handle_png = Url("slider_handle.png");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string tabs_icons_png = Url("tabs_icons.png");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string tree_icons_png = Url("tree_icons.png");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class metro_orange {
                    private const string URLPATH = "~/Scripts/easyui14/themes/metro-orange";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                    public static readonly string blank_gif = Url("blank.gif");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combo_arrow_png = Url("combo_arrow.png");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string layout_arrows_png = Url("layout_arrows.png");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menu_arrows_png = Url("menu_arrows.png");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string messager_icons_png = Url("messager_icons.png");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string pagination_icons_png = Url("pagination_icons.png");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string panel_tools_png = Url("panel_tools.png");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string searchbox_button_png = Url("searchbox_button.png");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string slider_handle_png = Url("slider_handle.png");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string tabs_icons_png = Url("tabs_icons.png");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string tree_icons_png = Url("tree_icons.png");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class metro_red {
                    private const string URLPATH = "~/Scripts/easyui14/themes/metro-red";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                    public static readonly string blank_gif = Url("blank.gif");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combo_arrow_png = Url("combo_arrow.png");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string layout_arrows_png = Url("layout_arrows.png");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menu_arrows_png = Url("menu_arrows.png");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string messager_icons_png = Url("messager_icons.png");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string pagination_icons_png = Url("pagination_icons.png");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string panel_tools_png = Url("panel_tools.png");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string searchbox_button_png = Url("searchbox_button.png");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string slider_handle_png = Url("slider_handle.png");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string tabs_icons_png = Url("tabs_icons.png");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string tree_icons_png = Url("tree_icons.png");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ui_cupertino {
                    private const string URLPATH = "~/Scripts/easyui14/themes/ui-cupertino";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                    public static readonly string blank_gif = Url("blank.gif");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combo_arrow_png = Url("combo_arrow.png");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string layout_arrows_png = Url("layout_arrows.png");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menu_arrows_png = Url("menu_arrows.png");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string messager_icons_png = Url("messager_icons.png");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string pagination_icons_png = Url("pagination_icons.png");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string panel_tools_png = Url("panel_tools.png");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string searchbox_button_png = Url("searchbox_button.png");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string slider_handle_png = Url("slider_handle.png");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string tabs_icons_png = Url("tabs_icons.png");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string tree_icons_png = Url("tree_icons.png");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ui_dark_hive {
                    private const string URLPATH = "~/Scripts/easyui14/themes/ui-dark-hive";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                    public static readonly string blank_gif = Url("blank.gif");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combo_arrow_png = Url("combo_arrow.png");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string layout_arrows_png = Url("layout_arrows.png");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menu_arrows_png = Url("menu_arrows.png");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string messager_icons_png = Url("messager_icons.png");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string pagination_icons_png = Url("pagination_icons.png");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string panel_tools_png = Url("panel_tools.png");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string searchbox_button_png = Url("searchbox_button.png");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string slider_handle_png = Url("slider_handle.png");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string tabs_icons_png = Url("tabs_icons.png");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string tree_icons_png = Url("tree_icons.png");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ui_pepper_grinder {
                    private const string URLPATH = "~/Scripts/easyui14/themes/ui-pepper-grinder";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                    public static readonly string blank_gif = Url("blank.gif");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combo_arrow_png = Url("combo_arrow.png");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string layout_arrows_png = Url("layout_arrows.png");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menu_arrows_png = Url("menu_arrows.png");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string messager_icons_png = Url("messager_icons.png");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string pagination_icons_png = Url("pagination_icons.png");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string panel_tools_png = Url("panel_tools.png");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string searchbox_button_png = Url("searchbox_button.png");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string slider_handle_png = Url("slider_handle.png");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string tabs_icons_png = Url("tabs_icons.png");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string tree_icons_png = Url("tree_icons.png");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ui_sunny {
                    private const string URLPATH = "~/Scripts/easyui14/themes/ui-sunny";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                    public static readonly string accordion_arrows_png = Url("accordion_arrows.png");
                    public static readonly string blank_gif = Url("blank.gif");
                    public static readonly string calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calendar.min.css") ? Url("calendar.min.css") : Url("calendar.css");
                    public static readonly string calendar_arrows_png = Url("calendar_arrows.png");
                    public static readonly string combo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combo.min.css") ? Url("combo.min.css") : Url("combo.css");
                    public static readonly string combo_arrow_png = Url("combo_arrow.png");
                    public static readonly string combobox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/combobox.min.css") ? Url("combobox.min.css") : Url("combobox.css");
                    public static readonly string datagrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datagrid.min.css") ? Url("datagrid.min.css") : Url("datagrid.css");
                    public static readonly string datagrid_icons_png = Url("datagrid_icons.png");
                    public static readonly string datebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datebox.min.css") ? Url("datebox.min.css") : Url("datebox.css");
                    public static readonly string datebox_arrow_png = Url("datebox_arrow.png");
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string easyui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/easyui.min.css") ? Url("easyui.min.css") : Url("easyui.css");
                    public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                    public static readonly string layout_arrows_png = Url("layout_arrows.png");
                    public static readonly string linkbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linkbutton.min.css") ? Url("linkbutton.min.css") : Url("linkbutton.css");
                    public static readonly string linkbutton_bg_png = Url("linkbutton_bg.png");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                    public static readonly string menu_arrows_png = Url("menu_arrows.png");
                    public static readonly string menubutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menubutton.min.css") ? Url("menubutton.min.css") : Url("menubutton.css");
                    public static readonly string messager_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/messager.min.css") ? Url("messager.min.css") : Url("messager.css");
                    public static readonly string messager_icons_png = Url("messager_icons.png");
                    public static readonly string numberbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/numberbox.min.css") ? Url("numberbox.min.css") : Url("numberbox.css");
                    public static readonly string pagination_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pagination.min.css") ? Url("pagination.min.css") : Url("pagination.css");
                    public static readonly string pagination_icons_png = Url("pagination_icons.png");
                    public static readonly string panel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/panel.min.css") ? Url("panel.min.css") : Url("panel.css");
                    public static readonly string panel_tools_png = Url("panel_tools.png");
                    public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                    public static readonly string propertygrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/propertygrid.min.css") ? Url("propertygrid.min.css") : Url("propertygrid.css");
                    public static readonly string searchbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchbox.min.css") ? Url("searchbox.min.css") : Url("searchbox.css");
                    public static readonly string searchbox_button_png = Url("searchbox_button.png");
                    public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                    public static readonly string slider_handle_png = Url("slider_handle.png");
                    public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                    public static readonly string spinner_arrows_png = Url("spinner_arrows.png");
                    public static readonly string splitbutton_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/splitbutton.min.css") ? Url("splitbutton.min.css") : Url("splitbutton.css");
                    public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                    public static readonly string tabs_icons_png = Url("tabs_icons.png");
                    public static readonly string textbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textbox.min.css") ? Url("textbox.min.css") : Url("textbox.css");
                    public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                    public static readonly string tree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tree.min.css") ? Url("tree.min.css") : Url("tree.css");
                    public static readonly string tree_icons_png = Url("tree_icons.png");
                    public static readonly string validatebox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validatebox.min.css") ? Url("validatebox.min.css") : Url("validatebox.css");
                    public static readonly string validatebox_warning_png = Url("validatebox_warning.png");
                    public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                }
            
            }
        
        }
    
        public static readonly string gridmvc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gridmvc.min.js") ? Url("gridmvc.min.js") : Url("gridmvc.js");
        public static readonly string gridmvc_lang_ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gridmvc.lang.ru.min.js") ? Url("gridmvc.lang.ru.min.js") : Url("gridmvc.lang.ru.js");
        public static readonly string gridmvc_min_js = Url("gridmvc.min.js");
        public static readonly string jquery_2_1_4_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.4.intellisense.min.js") ? Url("jquery-2.1.4.intellisense.min.js") : Url("jquery-2.1.4.intellisense.js");
        public static readonly string jquery_2_1_4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.4.min.js") ? Url("jquery-2.1.4.min.js") : Url("jquery-2.1.4.js");
        public static readonly string jquery_2_1_4_min_js = Url("jquery-2.1.4.min.js");
        public static readonly string jquery_2_1_4_min_map = Url("jquery-2.1.4.min.map");
        public static readonly string jquery_address_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.address.min.js") ? Url("jquery.address.min.js") : Url("jquery.address.js");
        public static readonly string jquery_bootpag_min_js = Url("jquery.bootpag.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class js {
            private const string URLPATH = "~/Scripts/js";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class JSON2 {
            private const string URLPATH = "~/Scripts/JSON2";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string cycle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cycle.min.js") ? Url("cycle.min.js") : Url("cycle.js");
            public static readonly string json_parse_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/json_parse.min.js") ? Url("json_parse.min.js") : Url("json_parse.js");
            public static readonly string json_parse_state_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/json_parse_state.min.js") ? Url("json_parse_state.min.js") : Url("json_parse_state.js");
            public static readonly string json2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/json2.min.js") ? Url("json2.min.js") : Url("json2.js");
            public static readonly string README = Url("README");
        }
    
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
        public static readonly string MyJS_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MyJS.min.js") ? Url("MyJS.min.js") : Url("MyJS.js");
        public static readonly string npm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/npm.min.js") ? Url("npm.min.js") : Url("npm.js");
        public static readonly string QueryString_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/QueryString.min.js") ? Url("QueryString.min.js") : Url("QueryString.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class raterater {
            private const string URLPATH = "~/Scripts/raterater";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string fontawesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fontawesome.min.css") ? Url("fontawesome.min.css") : Url("fontawesome.css");
            public static readonly string raterater_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/raterater.min.css") ? Url("raterater.min.css") : Url("raterater.css");
            public static readonly string raterater_jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/raterater.jquery.min.js") ? Url("raterater.jquery.min.js") : Url("raterater.jquery.js");
            public static readonly string raterater_jquery_json = Url("raterater.jquery.json");
        }
    
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class tinymce {
            private const string URLPATH = "~/Scripts/tinymce";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class langs {
                private const string URLPATH = "~/Scripts/tinymce/langs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string readme_md = Url("readme.md");
                public static readonly string zh_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh_CN.min.js") ? Url("zh_CN.min.js") : Url("zh_CN.js");
            }
        
            public static readonly string license_txt = Url("license.txt");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Scripts/tinymce/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class advlist {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/advlist";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class anchor {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/anchor";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autolink {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/autolink";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autoresize {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/autoresize";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autosave {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/autosave";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class bbcode {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/bbcode";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class charmap {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/charmap";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class code {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/code";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class colorpicker {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/colorpicker";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class contextmenu {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/contextmenu";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class directionality {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/directionality";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class emoticons {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/emoticons";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/Scripts/tinymce/plugins/emoticons/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string smiley_cool_gif = Url("smiley-cool.gif");
                        public static readonly string smiley_cry_gif = Url("smiley-cry.gif");
                        public static readonly string smiley_embarassed_gif = Url("smiley-embarassed.gif");
                        public static readonly string smiley_foot_in_mouth_gif = Url("smiley-foot-in-mouth.gif");
                        public static readonly string smiley_frown_gif = Url("smiley-frown.gif");
                        public static readonly string smiley_innocent_gif = Url("smiley-innocent.gif");
                        public static readonly string smiley_kiss_gif = Url("smiley-kiss.gif");
                        public static readonly string smiley_laughing_gif = Url("smiley-laughing.gif");
                        public static readonly string smiley_money_mouth_gif = Url("smiley-money-mouth.gif");
                        public static readonly string smiley_sealed_gif = Url("smiley-sealed.gif");
                        public static readonly string smiley_smile_gif = Url("smiley-smile.gif");
                        public static readonly string smiley_surprised_gif = Url("smiley-surprised.gif");
                        public static readonly string smiley_tongue_out_gif = Url("smiley-tongue-out.gif");
                        public static readonly string smiley_undecided_gif = Url("smiley-undecided.gif");
                        public static readonly string smiley_wink_gif = Url("smiley-wink.gif");
                        public static readonly string smiley_yell_gif = Url("smiley-yell.gif");
                    }
                
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class example {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/example";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_html = Url("dialog.html");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class example_dependency {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/example_dependency";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class fullpage {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/fullpage";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class fullscreen {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/fullscreen";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class hr {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/hr";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class image {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/image";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class imagetools {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/imagetools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class importcss {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/importcss";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class insertdatetime {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/insertdatetime";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class layer {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/layer";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class legacyoutput {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/legacyoutput";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class link {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/link";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class lists {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/lists";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class media {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/media";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string moxieplayer_swf = Url("moxieplayer.swf");
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class nonbreaking {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/nonbreaking";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class noneditable {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/noneditable";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pagebreak {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/pagebreak";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class paste {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/paste";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class preview {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/preview";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class print {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/print";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class save {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/save";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class searchreplace {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/searchreplace";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class spellchecker {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/spellchecker";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tabfocus {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/tabfocus";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class table {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/table";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class template {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/template";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class textcolor {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/textcolor";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class textpattern {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/textpattern";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class visualblocks {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/visualblocks";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/Scripts/tinymce/plugins/visualblocks/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string visualblocks_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/visualblocks.min.css") ? Url("visualblocks.min.css") : Url("visualblocks.css");
                    }
                
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class visualchars {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/visualchars";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class wordcount {
                    private const string URLPATH = "~/Scripts/tinymce/plugins/wordcount";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_min_js = Url("plugin.min.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skins {
                private const string URLPATH = "~/Scripts/tinymce/skins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class lightgray {
                    private const string URLPATH = "~/Scripts/tinymce/skins/lightgray";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string content_inline_min_css = Url("content.inline.min.css");
                    public static readonly string content_min_css = Url("content.min.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class fonts {
                        private const string URLPATH = "~/Scripts/tinymce/skins/lightgray/fonts";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string readme_md = Url("readme.md");
                        public static readonly string tinymce_small_dev_svg = Url("tinymce-small.dev.svg");
                        public static readonly string tinymce_small_eot = Url("tinymce-small.eot");
                        public static readonly string tinymce_small_svg = Url("tinymce-small.svg");
                        public static readonly string tinymce_small_ttf = Url("tinymce-small.ttf");
                        public static readonly string tinymce_small_woff = Url("tinymce-small.woff");
                        public static readonly string tinymce_dev_svg = Url("tinymce.dev.svg");
                        public static readonly string tinymce_eot = Url("tinymce.eot");
                        public static readonly string tinymce_svg = Url("tinymce.svg");
                        public static readonly string tinymce_ttf = Url("tinymce.ttf");
                        public static readonly string tinymce_woff = Url("tinymce.woff");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/Scripts/tinymce/skins/lightgray/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string anchor_gif = Url("anchor.gif");
                        public static readonly string loader_gif = Url("loader.gif");
                        public static readonly string object_gif = Url("object.gif");
                        public static readonly string trans_gif = Url("trans.gif");
                    }
                
                    public static readonly string skin_ie7_min_css = Url("skin.ie7.min.css");
                    public static readonly string skin_min_css = Url("skin.min.css");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class themes {
                private const string URLPATH = "~/Scripts/tinymce/themes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class modern {
                    private const string URLPATH = "~/Scripts/tinymce/themes/modern";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string theme_min_js = Url("theme.min.js");
                }
            
            }
        
            public static readonly string tinymce_min_js = Url("tinymce.min.js");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bootstrap_rating_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-rating.min.css") ? Url("bootstrap-rating.min.css") : Url("bootstrap-rating.css");
        public static readonly string bootstrap_table_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-table.min.css") ? Url("bootstrap-table.min.css") : Url("bootstrap-table.css");
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
        public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datepicker.min.css") ? Url("datepicker.min.css") : Url("datepicker.css");
        public static readonly string datepicker3_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datepicker3.min.css") ? Url("datepicker3.min.css") : Url("datepicker3.css");
        public static readonly string fontawesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fontawesome.min.css") ? Url("fontawesome.min.css") : Url("fontawesome.css");
        public static readonly string Gridmvc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Gridmvc.min.css") ? Url("Gridmvc.min.css") : Url("Gridmvc.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Image {
            private const string URLPATH = "~/Content/Image";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string right_png = Url("right.png");
            public static readonly string star_png = Url("star.png");
            public static readonly string unvalid_png = Url("unvalid.png");
            public static readonly string valid_png = Url("valid.png");
            public static readonly string wrong_png = Url("wrong.png");
        }
    
        public static readonly string MvcContrib_Grid_Style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MvcContrib-Grid-Style.min.css") ? Url("MvcContrib-Grid-Style.min.css") : Url("MvcContrib-Grid-Style.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class NewFolder1 {
            private const string URLPATH = "~/Content/NewFolder1";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        }
    
        public static readonly string PagedList_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PagedList.min.css") ? Url("PagedList.min.css") : Url("PagedList.css");
        public static readonly string raterater_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/raterater.min.css") ? Url("raterater.min.css") : Url("raterater.css");
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
        public static readonly string styles_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/styles.min.css") ? Url("styles.min.css") : Url("styles.css");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class artDialog 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string ui_dialog_css = "~/Scripts/artDialog/css/ui-dialog.css";
                    }
                }
                public static partial class dist 
                {
                    public static class Assets
                    {
                        public const string dialog_min_js = "~/Scripts/artDialog/dist/dialog-min.js"; 
                        public const string dialog_plus_min_js = "~/Scripts/artDialog/dist/dialog-plus-min.js"; 
                        public const string dialog_plus_js = "~/Scripts/artDialog/dist/dialog-plus.js"; 
                        public const string dialog_js = "~/Scripts/artDialog/dist/dialog.js"; 
                    }
                }
                public static partial class doc 
                {
                    public static partial class css 
                    {
                        public static class Assets
                        {
                            public const string doc_css = "~/Scripts/artDialog/doc/css/doc.css";
                        }
                    }
                    public static partial class js 
                    {
                        public static class Assets
                        {
                            public const string doc_js = "~/Scripts/artDialog/doc/js/doc.js"; 
                            public const string sh_languages_js = "~/Scripts/artDialog/doc/js/sh_languages.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class lib 
                {
                    public static class Assets
                    {
                        public const string jquery_1_10_2_js = "~/Scripts/artDialog/lib/jquery-1.10.2.js"; 
                        public const string require_js = "~/Scripts/artDialog/lib/require.js"; 
                        public const string sea_js = "~/Scripts/artDialog/lib/sea.js"; 
                    }
                }
                public static partial class src 
                {
                    public static partial class global_modules 
                    {
                        public static class Assets
                        {
                            public const string jquery_js = "~/Scripts/artDialog/src/global_modules/jquery.js"; 
                        }
                    }
                    public static class Assets
                    {
                        public const string dialog_config_js = "~/Scripts/artDialog/src/dialog-config.js"; 
                        public const string dialog_plus_js = "~/Scripts/artDialog/src/dialog-plus.js"; 
                        public const string dialog_js = "~/Scripts/artDialog/src/dialog.js"; 
                        public const string drag_js = "~/Scripts/artDialog/src/drag.js"; 
                        public const string popup_js = "~/Scripts/artDialog/src/popup.js"; 
                    }
                }
                public static partial class test 
                {
                    public static partial class iframe 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string Gruntfile_js = "~/Scripts/artDialog/Gruntfile.js"; 
                }
            }
            public static partial class bootstrap_rating 
            {
                public static class Assets
                {
                    public const string bootstrap_rating_js = "~/Scripts/bootstrap-rating/bootstrap-rating.js"; 
                    public const string bootstrap_rating_min_js = "~/Scripts/bootstrap-rating/bootstrap-rating.min.js"; 
                }
            }
            public static partial class bootstrap_tree 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string bootstrap_treeview_css = "~/Scripts/bootstrap-tree/css/bootstrap-treeview.css";
                    }
                }
                public static partial class js 
                {
                    public static class Assets
                    {
                        public const string bootstrap_treeview_js = "~/Scripts/bootstrap-tree/js/bootstrap-treeview.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class ckeditor 
            {
                public static partial class adapters 
                {
                    public static class Assets
                    {
                        public const string jquery_js = "~/Scripts/ckeditor/adapters/jquery.js"; 
                    }
                }
                public static partial class lang 
                {
                    public static class Assets
                    {
                        public const string af_js = "~/Scripts/ckeditor/lang/af.js"; 
                        public const string ar_js = "~/Scripts/ckeditor/lang/ar.js"; 
                        public const string bg_js = "~/Scripts/ckeditor/lang/bg.js"; 
                        public const string bn_js = "~/Scripts/ckeditor/lang/bn.js"; 
                        public const string bs_js = "~/Scripts/ckeditor/lang/bs.js"; 
                        public const string ca_js = "~/Scripts/ckeditor/lang/ca.js"; 
                        public const string cs_js = "~/Scripts/ckeditor/lang/cs.js"; 
                        public const string cy_js = "~/Scripts/ckeditor/lang/cy.js"; 
                        public const string da_js = "~/Scripts/ckeditor/lang/da.js"; 
                        public const string de_js = "~/Scripts/ckeditor/lang/de.js"; 
                        public const string el_js = "~/Scripts/ckeditor/lang/el.js"; 
                        public const string en_au_js = "~/Scripts/ckeditor/lang/en-au.js"; 
                        public const string en_ca_js = "~/Scripts/ckeditor/lang/en-ca.js"; 
                        public const string en_gb_js = "~/Scripts/ckeditor/lang/en-gb.js"; 
                        public const string en_js = "~/Scripts/ckeditor/lang/en.js"; 
                        public const string eo_js = "~/Scripts/ckeditor/lang/eo.js"; 
                        public const string es_js = "~/Scripts/ckeditor/lang/es.js"; 
                        public const string et_js = "~/Scripts/ckeditor/lang/et.js"; 
                        public const string eu_js = "~/Scripts/ckeditor/lang/eu.js"; 
                        public const string fa_js = "~/Scripts/ckeditor/lang/fa.js"; 
                        public const string fi_js = "~/Scripts/ckeditor/lang/fi.js"; 
                        public const string fo_js = "~/Scripts/ckeditor/lang/fo.js"; 
                        public const string fr_ca_js = "~/Scripts/ckeditor/lang/fr-ca.js"; 
                        public const string fr_js = "~/Scripts/ckeditor/lang/fr.js"; 
                        public const string gl_js = "~/Scripts/ckeditor/lang/gl.js"; 
                        public const string gu_js = "~/Scripts/ckeditor/lang/gu.js"; 
                        public const string he_js = "~/Scripts/ckeditor/lang/he.js"; 
                        public const string hi_js = "~/Scripts/ckeditor/lang/hi.js"; 
                        public const string hr_js = "~/Scripts/ckeditor/lang/hr.js"; 
                        public const string hu_js = "~/Scripts/ckeditor/lang/hu.js"; 
                        public const string id_js = "~/Scripts/ckeditor/lang/id.js"; 
                        public const string is_js = "~/Scripts/ckeditor/lang/is.js"; 
                        public const string it_js = "~/Scripts/ckeditor/lang/it.js"; 
                        public const string ja_js = "~/Scripts/ckeditor/lang/ja.js"; 
                        public const string ka_js = "~/Scripts/ckeditor/lang/ka.js"; 
                        public const string km_js = "~/Scripts/ckeditor/lang/km.js"; 
                        public const string ko_js = "~/Scripts/ckeditor/lang/ko.js"; 
                        public const string ku_js = "~/Scripts/ckeditor/lang/ku.js"; 
                        public const string lt_js = "~/Scripts/ckeditor/lang/lt.js"; 
                        public const string lv_js = "~/Scripts/ckeditor/lang/lv.js"; 
                        public const string mk_js = "~/Scripts/ckeditor/lang/mk.js"; 
                        public const string mn_js = "~/Scripts/ckeditor/lang/mn.js"; 
                        public const string ms_js = "~/Scripts/ckeditor/lang/ms.js"; 
                        public const string nb_js = "~/Scripts/ckeditor/lang/nb.js"; 
                        public const string nl_js = "~/Scripts/ckeditor/lang/nl.js"; 
                        public const string no_js = "~/Scripts/ckeditor/lang/no.js"; 
                        public const string pl_js = "~/Scripts/ckeditor/lang/pl.js"; 
                        public const string pt_br_js = "~/Scripts/ckeditor/lang/pt-br.js"; 
                        public const string pt_js = "~/Scripts/ckeditor/lang/pt.js"; 
                        public const string ro_js = "~/Scripts/ckeditor/lang/ro.js"; 
                        public const string ru_js = "~/Scripts/ckeditor/lang/ru.js"; 
                        public const string si_js = "~/Scripts/ckeditor/lang/si.js"; 
                        public const string sk_js = "~/Scripts/ckeditor/lang/sk.js"; 
                        public const string sl_js = "~/Scripts/ckeditor/lang/sl.js"; 
                        public const string sq_js = "~/Scripts/ckeditor/lang/sq.js"; 
                        public const string sr_latn_js = "~/Scripts/ckeditor/lang/sr-latn.js"; 
                        public const string sr_js = "~/Scripts/ckeditor/lang/sr.js"; 
                        public const string sv_js = "~/Scripts/ckeditor/lang/sv.js"; 
                        public const string th_js = "~/Scripts/ckeditor/lang/th.js"; 
                        public const string tr_js = "~/Scripts/ckeditor/lang/tr.js"; 
                        public const string tt_js = "~/Scripts/ckeditor/lang/tt.js"; 
                        public const string ug_js = "~/Scripts/ckeditor/lang/ug.js"; 
                        public const string uk_js = "~/Scripts/ckeditor/lang/uk.js"; 
                        public const string vi_js = "~/Scripts/ckeditor/lang/vi.js"; 
                        public const string zh_cn_js = "~/Scripts/ckeditor/lang/zh-cn.js"; 
                        public const string zh_js = "~/Scripts/ckeditor/lang/zh.js"; 
                    }
                }
                public static partial class plugins 
                {
                    public static partial class a11yhelp 
                    {
                        public static partial class dialogs 
                        {
                            public static partial class lang 
                            {
                                public static class Assets
                                {
                                    public const string af_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/af.js"; 
                                    public const string ar_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/ar.js"; 
                                    public const string bg_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/bg.js"; 
                                    public const string ca_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/ca.js"; 
                                    public const string cs_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/cs.js"; 
                                    public const string cy_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/cy.js"; 
                                    public const string da_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/da.js"; 
                                    public const string de_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/de.js"; 
                                    public const string el_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/el.js"; 
                                    public const string en_gb_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/en-gb.js"; 
                                    public const string en_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/en.js"; 
                                    public const string eo_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/eo.js"; 
                                    public const string es_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/es.js"; 
                                    public const string et_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/et.js"; 
                                    public const string fa_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/fa.js"; 
                                    public const string fi_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/fi.js"; 
                                    public const string fo_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/fo.js"; 
                                    public const string fr_ca_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/fr-ca.js"; 
                                    public const string fr_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/fr.js"; 
                                    public const string gl_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/gl.js"; 
                                    public const string gu_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/gu.js"; 
                                    public const string he_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/he.js"; 
                                    public const string hi_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/hi.js"; 
                                    public const string hr_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/hr.js"; 
                                    public const string hu_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/hu.js"; 
                                    public const string id_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/id.js"; 
                                    public const string it_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/it.js"; 
                                    public const string ja_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/ja.js"; 
                                    public const string km_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/km.js"; 
                                    public const string ko_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/ko.js"; 
                                    public const string ku_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/ku.js"; 
                                    public const string lt_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/lt.js"; 
                                    public const string lv_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/lv.js"; 
                                    public const string mk_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/mk.js"; 
                                    public const string mn_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/mn.js"; 
                                    public const string nb_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/nb.js"; 
                                    public const string nl_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/nl.js"; 
                                    public const string no_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/no.js"; 
                                    public const string pl_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/pl.js"; 
                                    public const string pt_br_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/pt-br.js"; 
                                    public const string pt_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/pt.js"; 
                                    public const string ro_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/ro.js"; 
                                    public const string ru_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/ru.js"; 
                                    public const string si_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/si.js"; 
                                    public const string sk_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/sk.js"; 
                                    public const string sl_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/sl.js"; 
                                    public const string sq_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/sq.js"; 
                                    public const string sr_latn_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/sr-latn.js"; 
                                    public const string sr_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/sr.js"; 
                                    public const string sv_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/sv.js"; 
                                    public const string th_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/th.js"; 
                                    public const string tr_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/tr.js"; 
                                    public const string tt_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/tt.js"; 
                                    public const string ug_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/ug.js"; 
                                    public const string uk_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/uk.js"; 
                                    public const string vi_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/vi.js"; 
                                    public const string zh_cn_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/zh-cn.js"; 
                                    public const string zh_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/lang/zh.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string a11yhelp_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/a11yhelp.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class about 
                    {
                        public static partial class dialogs 
                        {
                            public static partial class hidpi 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string about_js = "~/Scripts/ckeditor/plugins/about/dialogs/about.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class button 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class clipboard 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string paste_js = "~/Scripts/ckeditor/plugins/clipboard/dialogs/paste.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class colordialog 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string colordialog_js = "~/Scripts/ckeditor/plugins/colordialog/dialogs/colordialog.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class confighelper 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class dialog 
                    {
                        public static class Assets
                        {
                            public const string dialogDefinition_js = "~/Scripts/ckeditor/plugins/dialog/dialogDefinition.js"; 
                        }
                    }
                    public static partial class dialogui 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class div 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string div_js = "~/Scripts/ckeditor/plugins/div/dialogs/div.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class filetools 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class find 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string find_js = "~/Scripts/ckeditor/plugins/find/dialogs/find.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class flash 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string flash_js = "~/Scripts/ckeditor/plugins/flash/dialogs/flash.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class forms 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string button_js = "~/Scripts/ckeditor/plugins/forms/dialogs/button.js"; 
                                public const string checkbox_js = "~/Scripts/ckeditor/plugins/forms/dialogs/checkbox.js"; 
                                public const string form_js = "~/Scripts/ckeditor/plugins/forms/dialogs/form.js"; 
                                public const string hiddenfield_js = "~/Scripts/ckeditor/plugins/forms/dialogs/hiddenfield.js"; 
                                public const string radio_js = "~/Scripts/ckeditor/plugins/forms/dialogs/radio.js"; 
                                public const string select_js = "~/Scripts/ckeditor/plugins/forms/dialogs/select.js"; 
                                public const string textarea_js = "~/Scripts/ckeditor/plugins/forms/dialogs/textarea.js"; 
                                public const string textfield_js = "~/Scripts/ckeditor/plugins/forms/dialogs/textfield.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class iframe 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string iframe_js = "~/Scripts/ckeditor/plugins/iframe/dialogs/iframe.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class image 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string image_js = "~/Scripts/ckeditor/plugins/image/dialogs/image.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class lineutils 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class link 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string anchor_js = "~/Scripts/ckeditor/plugins/link/dialogs/anchor.js"; 
                                public const string link_js = "~/Scripts/ckeditor/plugins/link/dialogs/link.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static partial class hidpi 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class liststyle 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string liststyle_js = "~/Scripts/ckeditor/plugins/liststyle/dialogs/liststyle.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class magicline 
                    {
                        public static partial class images 
                        {
                            public static partial class hidpi 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class mathjax 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/mathjax/plugin.js"; 
                        }
                    }
                    public static partial class notification 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class notificationaggregator 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pagebreak 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pastefromword 
                    {
                        public static partial class filter 
                        {
                            public static class Assets
                            {
                                public const string default_js = "~/Scripts/ckeditor/plugins/pastefromword/filter/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class preview 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class scayt 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string options_js = "~/Scripts/ckeditor/plugins/scayt/dialogs/options.js"; 
                                public const string toolbar_css = "~/Scripts/ckeditor/plugins/scayt/dialogs/toolbar.css";
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class showblocks 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class smiley 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string smiley_js = "~/Scripts/ckeditor/plugins/smiley/dialogs/smiley.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class specialchar 
                    {
                        public static partial class dialogs 
                        {
                            public static partial class lang 
                            {
                                public static class Assets
                                {
                                    public const string af_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/af.js"; 
                                    public const string ar_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/ar.js"; 
                                    public const string bg_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/bg.js"; 
                                    public const string ca_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/ca.js"; 
                                    public const string cs_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/cs.js"; 
                                    public const string cy_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/cy.js"; 
                                    public const string da_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/da.js"; 
                                    public const string de_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/de.js"; 
                                    public const string el_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/el.js"; 
                                    public const string en_gb_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/en-gb.js"; 
                                    public const string en_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/en.js"; 
                                    public const string eo_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/eo.js"; 
                                    public const string es_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/es.js"; 
                                    public const string et_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/et.js"; 
                                    public const string fa_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/fa.js"; 
                                    public const string fi_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/fi.js"; 
                                    public const string fr_ca_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/fr-ca.js"; 
                                    public const string fr_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/fr.js"; 
                                    public const string gl_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/gl.js"; 
                                    public const string he_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/he.js"; 
                                    public const string hr_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/hr.js"; 
                                    public const string hu_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/hu.js"; 
                                    public const string id_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/id.js"; 
                                    public const string it_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/it.js"; 
                                    public const string ja_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/ja.js"; 
                                    public const string km_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/km.js"; 
                                    public const string ko_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/ko.js"; 
                                    public const string ku_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/ku.js"; 
                                    public const string lt_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/lt.js"; 
                                    public const string lv_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/lv.js"; 
                                    public const string nb_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/nb.js"; 
                                    public const string nl_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/nl.js"; 
                                    public const string no_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/no.js"; 
                                    public const string pl_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/pl.js"; 
                                    public const string pt_br_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/pt-br.js"; 
                                    public const string pt_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/pt.js"; 
                                    public const string ru_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/ru.js"; 
                                    public const string si_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/si.js"; 
                                    public const string sk_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/sk.js"; 
                                    public const string sl_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/sl.js"; 
                                    public const string sq_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/sq.js"; 
                                    public const string sv_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/sv.js"; 
                                    public const string th_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/th.js"; 
                                    public const string tr_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/tr.js"; 
                                    public const string tt_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/tt.js"; 
                                    public const string ug_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/ug.js"; 
                                    public const string uk_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/uk.js"; 
                                    public const string vi_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/vi.js"; 
                                    public const string zh_cn_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/zh-cn.js"; 
                                    public const string zh_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/lang/zh.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string specialchar_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/specialchar.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class table 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string table_js = "~/Scripts/ckeditor/plugins/table/dialogs/table.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class tabletools 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string tableCell_js = "~/Scripts/ckeditor/plugins/tabletools/dialogs/tableCell.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class templates 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string templates_css = "~/Scripts/ckeditor/plugins/templates/dialogs/templates.css";
                                public const string templates_js = "~/Scripts/ckeditor/plugins/templates/dialogs/templates.js"; 
                            }
                        }
                        public static partial class templates_ 
                        {
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string default_js = "~/Scripts/ckeditor/plugins/templates/templates/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class toolbar 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class uploadimage 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class uploadwidget 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class widget 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class wsc 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string wsc_css = "~/Scripts/ckeditor/plugins/wsc/dialogs/wsc.css";
                                public const string wsc_js = "~/Scripts/ckeditor/plugins/wsc/dialogs/wsc.js"; 
                                public const string wsc_ie_js = "~/Scripts/ckeditor/plugins/wsc/dialogs/wsc_ie.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class samples 
                {
                    public static partial class css 
                    {
                        public static class Assets
                        {
                            public const string samples_css = "~/Scripts/ckeditor/samples/css/samples.css";
                        }
                    }
                    public static partial class img 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class js 
                    {
                        public static class Assets
                        {
                            public const string sample_js = "~/Scripts/ckeditor/samples/js/sample.js"; 
                            public const string sf_js = "~/Scripts/ckeditor/samples/js/sf.js"; 
                        }
                    }
                    public static partial class old 
                    {
                        public static partial class assets_ 
                        {
                            public static partial class inlineall 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static partial class outputxhtml 
                            {
                                public static class Assets
                                {
                                    public const string outputxhtml_css = "~/Scripts/ckeditor/samples/old/assets/outputxhtml/outputxhtml.css";
                                }
                            }
                            public static partial class uilanguages 
                            {
                                public static class Assets
                                {
                                    public const string languages_js = "~/Scripts/ckeditor/samples/old/assets/uilanguages/languages.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class dialog 
                        {
                            public static partial class assets_ 
                            {
                                public static class Assets
                                {
                                    public const string my_dialog_js = "~/Scripts/ckeditor/samples/old/dialog/assets/my_dialog.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class enterkey 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class htmlwriter 
                        {
                            public static partial class assets_ 
                            {
                                public static partial class outputforflash 
                                {
                                    public static class Assets
                                    {
                                        public const string swfobject_js = "~/Scripts/ckeditor/samples/old/htmlwriter/assets/outputforflash/swfobject.js"; 
                                    }
                                }
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class magicline 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class toolbar 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class wysiwygarea 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string sample_css = "~/Scripts/ckeditor/samples/old/sample.css";
                            public const string sample_js = "~/Scripts/ckeditor/samples/old/sample.js"; 
                        }
                    }
                    public static partial class toolbarconfigurator 
                    {
                        public static partial class css 
                        {
                            public static class Assets
                            {
                                public const string fontello_css = "~/Scripts/ckeditor/samples/toolbarconfigurator/css/fontello.css";
                            }
                        }
                        public static partial class font 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class js 
                        {
                            public static class Assets
                            {
                                public const string abstracttoolbarmodifier_js = "~/Scripts/ckeditor/samples/toolbarconfigurator/js/abstracttoolbarmodifier.js"; 
                                public const string fulltoolbareditor_js = "~/Scripts/ckeditor/samples/toolbarconfigurator/js/fulltoolbareditor.js"; 
                                public const string toolbarmodifier_js = "~/Scripts/ckeditor/samples/toolbarconfigurator/js/toolbarmodifier.js"; 
                                public const string toolbartextmodifier_js = "~/Scripts/ckeditor/samples/toolbarconfigurator/js/toolbartextmodifier.js"; 
                            }
                        }
                        public static partial class lib 
                        {
                            public static partial class codemirror 
                            {
                                public static class Assets
                                {
                                    public const string codemirror_css = "~/Scripts/ckeditor/samples/toolbarconfigurator/lib/codemirror/codemirror.css";
                                    public const string codemirror_js = "~/Scripts/ckeditor/samples/toolbarconfigurator/lib/codemirror/codemirror.js"; 
                                    public const string javascript_js = "~/Scripts/ckeditor/samples/toolbarconfigurator/lib/codemirror/javascript.js"; 
                                    public const string neo_css = "~/Scripts/ckeditor/samples/toolbarconfigurator/lib/codemirror/neo.css";
                                    public const string show_hint_css = "~/Scripts/ckeditor/samples/toolbarconfigurator/lib/codemirror/show-hint.css";
                                    public const string show_hint_js = "~/Scripts/ckeditor/samples/toolbarconfigurator/lib/codemirror/show-hint.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class skins 
                {
                    public static partial class moono 
                    {
                        public static partial class images 
                        {
                            public static partial class hidpi 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string dialog_css = "~/Scripts/ckeditor/skins/moono/dialog.css";
                            public const string dialog_ie_css = "~/Scripts/ckeditor/skins/moono/dialog_ie.css";
                            public const string dialog_ie7_css = "~/Scripts/ckeditor/skins/moono/dialog_ie7.css";
                            public const string dialog_ie8_css = "~/Scripts/ckeditor/skins/moono/dialog_ie8.css";
                            public const string dialog_iequirks_css = "~/Scripts/ckeditor/skins/moono/dialog_iequirks.css";
                            public const string editor_css = "~/Scripts/ckeditor/skins/moono/editor.css";
                            public const string editor_gecko_css = "~/Scripts/ckeditor/skins/moono/editor_gecko.css";
                            public const string editor_ie_css = "~/Scripts/ckeditor/skins/moono/editor_ie.css";
                            public const string editor_ie7_css = "~/Scripts/ckeditor/skins/moono/editor_ie7.css";
                            public const string editor_ie8_css = "~/Scripts/ckeditor/skins/moono/editor_ie8.css";
                            public const string editor_iequirks_css = "~/Scripts/ckeditor/skins/moono/editor_iequirks.css";
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string build_config_js = "~/Scripts/ckeditor/build-config.js"; 
                    public const string ckeditor_js = "~/Scripts/ckeditor/ckeditor.js"; 
                    public const string config_js = "~/Scripts/ckeditor/config.js"; 
                    public const string config_default_js = "~/Scripts/ckeditor/config_default.js"; 
                    public const string contents_css = "~/Scripts/ckeditor/contents.css";
                    public const string styles_js = "~/Scripts/ckeditor/styles.js"; 
                }
            }
            public static partial class DatetimePicker 
            {
                public static partial class build 
                {
                    public static class Assets
                    {
                        public const string jquery_datetimepicker_full_js = "~/Scripts/DatetimePicker/build/jquery.datetimepicker.full.js"; 
                        public const string jquery_datetimepicker_full_min_js = "~/Scripts/DatetimePicker/build/jquery.datetimepicker.full.min.js"; 
                        public const string jquery_datetimepicker_min_js = "~/Scripts/DatetimePicker/build/jquery.datetimepicker.min.js"; 
                    }
                }
                public static partial class screen 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string jquery_datetimepicker_css = "~/Scripts/DatetimePicker/jquery.datetimepicker.css";
                    public const string jquery_datetimepicker_js = "~/Scripts/DatetimePicker/jquery.datetimepicker.js"; 
                    public const string jquery_datetimepicker_min_js = "~/Scripts/DatetimePicker/jquery.datetimepicker.min.js"; 
                    public const string jquery_js = "~/Scripts/DatetimePicker/jquery.js"; 
                }
            }
            public static partial class Debugger 
            {
                public static class Assets
                {
                    public const string Alerter_js = "~/Scripts/Debugger/Alerter.js"; 
                }
            }
            public static partial class easyui14 
            {
                public static partial class extension 
                {
                    public static partial class datagrid_dnd 
                    {
                        public static class Assets
                        {
                            public const string datagrid_dnd_js = "~/Scripts/easyui14/extension/datagrid-dnd/datagrid-dnd.js"; 
                        }
                    }
                    public static partial class datagrid_filter 
                    {
                        public static class Assets
                        {
                            public const string datagrid_filter_js = "~/Scripts/easyui14/extension/datagrid-filter/datagrid-filter.js"; 
                        }
                    }
                    public static partial class jquery_easyui_datagridview 
                    {
                        public static class Assets
                        {
                            public const string datagrid_bufferview_js = "~/Scripts/easyui14/extension/jquery-easyui-datagridview/datagrid-bufferview.js"; 
                            public const string datagrid_defaultview_js = "~/Scripts/easyui14/extension/jquery-easyui-datagridview/datagrid-defaultview.js"; 
                            public const string datagrid_detailview_js = "~/Scripts/easyui14/extension/jquery-easyui-datagridview/datagrid-detailview.js"; 
                            public const string datagrid_groupview_js = "~/Scripts/easyui14/extension/jquery-easyui-datagridview/datagrid-groupview.js"; 
                            public const string datagrid_scrollview_js = "~/Scripts/easyui14/extension/jquery-easyui-datagridview/datagrid-scrollview.js"; 
                        }
                    }
                    public static partial class jquery_easyui_dwrloader 
                    {
                        public static partial class dwr 
                        {
                            public static partial class @interface 
                            {
                                public static class Assets
                                {
                                    public const string MyDwr_js = "~/Scripts/easyui14/extension/jquery-easyui-dwrloader/dwr/interface/MyDwr.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string engine_js = "~/Scripts/easyui14/extension/jquery-easyui-dwrloader/dwr/engine.js"; 
                                public const string util_js = "~/Scripts/easyui14/extension/jquery-easyui-dwrloader/dwr/util.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string dwrloader_js = "~/Scripts/easyui14/extension/jquery-easyui-dwrloader/dwrloader.js"; 
                        }
                    }
                    public static partial class jquery_easyui_edatagrid 
                    {
                        public static class Assets
                        {
                            public const string jquery_edatagrid_js = "~/Scripts/easyui14/extension/jquery-easyui-edatagrid/jquery.edatagrid.js"; 
                        }
                    }
                    public static partial class jquery_easyui_etree 
                    {
                        public static class Assets
                        {
                            public const string jquery_etree_js = "~/Scripts/easyui14/extension/jquery-easyui-etree/jquery.etree.js"; 
                            public const string jquery_etree_lang_js = "~/Scripts/easyui14/extension/jquery-easyui-etree/jquery.etree.lang.js"; 
                        }
                    }
                    public static partial class jquery_easyui_portal 
                    {
                        public static class Assets
                        {
                            public const string jquery_portal_js = "~/Scripts/easyui14/extension/jquery-easyui-portal/jquery.portal.js"; 
                            public const string portal_css = "~/Scripts/easyui14/extension/jquery-easyui-portal/portal.css";
                        }
                    }
                    public static partial class jquery_easyui_ribbon 
                    {
                        public static partial class images 
                        {
                            public static partial class _16 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static partial class _32 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string jquery_ribbon_js = "~/Scripts/easyui14/extension/jquery-easyui-ribbon/jquery.ribbon.js"; 
                            public const string ribbon_icon_css = "~/Scripts/easyui14/extension/jquery-easyui-ribbon/ribbon-icon.css";
                            public const string ribbon_css = "~/Scripts/easyui14/extension/jquery-easyui-ribbon/ribbon.css";
                        }
                    }
                    public static partial class jquery_easyui_rtl 
                    {
                        public static class Assets
                        {
                            public const string easyui_rtl_css = "~/Scripts/easyui14/extension/jquery-easyui-rtl/easyui-rtl.css";
                            public const string easyui_rtl_js = "~/Scripts/easyui14/extension/jquery-easyui-rtl/easyui-rtl.js"; 
                        }
                    }
                    public static partial class treegrid_dnd 
                    {
                        public static class Assets
                        {
                            public const string treegrid_dnd_js = "~/Scripts/easyui14/extension/treegrid-dnd/treegrid-dnd.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class locale 
                {
                    public static class Assets
                    {
                        public const string easyui_lang_af_js = "~/Scripts/easyui14/locale/easyui-lang-af.js"; 
                        public const string easyui_lang_am_js = "~/Scripts/easyui14/locale/easyui-lang-am.js"; 
                        public const string easyui_lang_ar_js = "~/Scripts/easyui14/locale/easyui-lang-ar.js"; 
                        public const string easyui_lang_bg_js = "~/Scripts/easyui14/locale/easyui-lang-bg.js"; 
                        public const string easyui_lang_ca_js = "~/Scripts/easyui14/locale/easyui-lang-ca.js"; 
                        public const string easyui_lang_cs_js = "~/Scripts/easyui14/locale/easyui-lang-cs.js"; 
                        public const string easyui_lang_cz_js = "~/Scripts/easyui14/locale/easyui-lang-cz.js"; 
                        public const string easyui_lang_da_js = "~/Scripts/easyui14/locale/easyui-lang-da.js"; 
                        public const string easyui_lang_de_js = "~/Scripts/easyui14/locale/easyui-lang-de.js"; 
                        public const string easyui_lang_el_js = "~/Scripts/easyui14/locale/easyui-lang-el.js"; 
                        public const string easyui_lang_en_js = "~/Scripts/easyui14/locale/easyui-lang-en.js"; 
                        public const string easyui_lang_es_js = "~/Scripts/easyui14/locale/easyui-lang-es.js"; 
                        public const string easyui_lang_fr_js = "~/Scripts/easyui14/locale/easyui-lang-fr.js"; 
                        public const string easyui_lang_it_js = "~/Scripts/easyui14/locale/easyui-lang-it.js"; 
                        public const string easyui_lang_jp_js = "~/Scripts/easyui14/locale/easyui-lang-jp.js"; 
                        public const string easyui_lang_nl_js = "~/Scripts/easyui14/locale/easyui-lang-nl.js"; 
                        public const string easyui_lang_pl_js = "~/Scripts/easyui14/locale/easyui-lang-pl.js"; 
                        public const string easyui_lang_pt_BR_js = "~/Scripts/easyui14/locale/easyui-lang-pt_BR.js"; 
                        public const string easyui_lang_ru_js = "~/Scripts/easyui14/locale/easyui-lang-ru.js"; 
                        public const string easyui_lang_sv_SE_js = "~/Scripts/easyui14/locale/easyui-lang-sv_SE.js"; 
                        public const string easyui_lang_tr_js = "~/Scripts/easyui14/locale/easyui-lang-tr.js"; 
                        public const string easyui_lang_zh_CN_js = "~/Scripts/easyui14/locale/easyui-lang-zh_CN.js"; 
                        public const string easyui_lang_zh_TW_js = "~/Scripts/easyui14/locale/easyui-lang-zh_TW.js"; 
                    }
                }
                public static partial class plugins 
                {
                    public static class Assets
                    {
                        public const string jquery_accordion_js = "~/Scripts/easyui14/plugins/jquery.accordion.js"; 
                        public const string jquery_calendar_js = "~/Scripts/easyui14/plugins/jquery.calendar.js"; 
                        public const string jquery_combo_js = "~/Scripts/easyui14/plugins/jquery.combo.js"; 
                        public const string jquery_combobox_js = "~/Scripts/easyui14/plugins/jquery.combobox.js"; 
                        public const string jquery_combogrid_js = "~/Scripts/easyui14/plugins/jquery.combogrid.js"; 
                        public const string jquery_combotree_js = "~/Scripts/easyui14/plugins/jquery.combotree.js"; 
                        public const string jquery_datagrid_js = "~/Scripts/easyui14/plugins/jquery.datagrid.js"; 
                        public const string jquery_datebox_js = "~/Scripts/easyui14/plugins/jquery.datebox.js"; 
                        public const string jquery_datetimebox_js = "~/Scripts/easyui14/plugins/jquery.datetimebox.js"; 
                        public const string jquery_datetimespinner_js = "~/Scripts/easyui14/plugins/jquery.datetimespinner.js"; 
                        public const string jquery_dialog_js = "~/Scripts/easyui14/plugins/jquery.dialog.js"; 
                        public const string jquery_draggable_js = "~/Scripts/easyui14/plugins/jquery.draggable.js"; 
                        public const string jquery_droppable_js = "~/Scripts/easyui14/plugins/jquery.droppable.js"; 
                        public const string jquery_filebox_js = "~/Scripts/easyui14/plugins/jquery.filebox.js"; 
                        public const string jquery_form_js = "~/Scripts/easyui14/plugins/jquery.form.js"; 
                        public const string jquery_layout_js = "~/Scripts/easyui14/plugins/jquery.layout.js"; 
                        public const string jquery_linkbutton_js = "~/Scripts/easyui14/plugins/jquery.linkbutton.js"; 
                        public const string jquery_menu_js = "~/Scripts/easyui14/plugins/jquery.menu.js"; 
                        public const string jquery_menubutton_js = "~/Scripts/easyui14/plugins/jquery.menubutton.js"; 
                        public const string jquery_messager_js = "~/Scripts/easyui14/plugins/jquery.messager.js"; 
                        public const string jquery_numberbox_js = "~/Scripts/easyui14/plugins/jquery.numberbox.js"; 
                        public const string jquery_numberspinner_js = "~/Scripts/easyui14/plugins/jquery.numberspinner.js"; 
                        public const string jquery_pagination_js = "~/Scripts/easyui14/plugins/jquery.pagination.js"; 
                        public const string jquery_panel_js = "~/Scripts/easyui14/plugins/jquery.panel.js"; 
                        public const string jquery_parser_js = "~/Scripts/easyui14/plugins/jquery.parser.js"; 
                        public const string jquery_progressbar_js = "~/Scripts/easyui14/plugins/jquery.progressbar.js"; 
                        public const string jquery_propertygrid_js = "~/Scripts/easyui14/plugins/jquery.propertygrid.js"; 
                        public const string jquery_resizable_js = "~/Scripts/easyui14/plugins/jquery.resizable.js"; 
                        public const string jquery_searchbox_js = "~/Scripts/easyui14/plugins/jquery.searchbox.js"; 
                        public const string jquery_slider_js = "~/Scripts/easyui14/plugins/jquery.slider.js"; 
                        public const string jquery_spinner_js = "~/Scripts/easyui14/plugins/jquery.spinner.js"; 
                        public const string jquery_splitbutton_js = "~/Scripts/easyui14/plugins/jquery.splitbutton.js"; 
                        public const string jquery_tabs_js = "~/Scripts/easyui14/plugins/jquery.tabs.js"; 
                        public const string jquery_textbox_js = "~/Scripts/easyui14/plugins/jquery.textbox.js"; 
                        public const string jquery_timespinner_js = "~/Scripts/easyui14/plugins/jquery.timespinner.js"; 
                        public const string jquery_tooltip_js = "~/Scripts/easyui14/plugins/jquery.tooltip.js"; 
                        public const string jquery_tree_js = "~/Scripts/easyui14/plugins/jquery.tree.js"; 
                        public const string jquery_treegrid_js = "~/Scripts/easyui14/plugins/jquery.treegrid.js"; 
                        public const string jquery_validatebox_js = "~/Scripts/easyui14/plugins/jquery.validatebox.js"; 
                        public const string jquery_window_js = "~/Scripts/easyui14/plugins/jquery.window.js"; 
                    }
                }
                public static partial class src 
                {
                    public static class Assets
                    {
                        public const string easyloader_js = "~/Scripts/easyui14/src/easyloader.js"; 
                        public const string jquery_accordion_js = "~/Scripts/easyui14/src/jquery.accordion.js"; 
                        public const string jquery_calendar_js = "~/Scripts/easyui14/src/jquery.calendar.js"; 
                        public const string jquery_combobox_js = "~/Scripts/easyui14/src/jquery.combobox.js"; 
                        public const string jquery_datebox_js = "~/Scripts/easyui14/src/jquery.datebox.js"; 
                        public const string jquery_draggable_js = "~/Scripts/easyui14/src/jquery.draggable.js"; 
                        public const string jquery_droppable_js = "~/Scripts/easyui14/src/jquery.droppable.js"; 
                        public const string jquery_form_js = "~/Scripts/easyui14/src/jquery.form.js"; 
                        public const string jquery_linkbutton_js = "~/Scripts/easyui14/src/jquery.linkbutton.js"; 
                        public const string jquery_menu_js = "~/Scripts/easyui14/src/jquery.menu.js"; 
                        public const string jquery_parser_js = "~/Scripts/easyui14/src/jquery.parser.js"; 
                        public const string jquery_progressbar_js = "~/Scripts/easyui14/src/jquery.progressbar.js"; 
                        public const string jquery_propertygrid_js = "~/Scripts/easyui14/src/jquery.propertygrid.js"; 
                        public const string jquery_resizable_js = "~/Scripts/easyui14/src/jquery.resizable.js"; 
                        public const string jquery_slider_js = "~/Scripts/easyui14/src/jquery.slider.js"; 
                        public const string jquery_tabs_js = "~/Scripts/easyui14/src/jquery.tabs.js"; 
                        public const string jquery_window_js = "~/Scripts/easyui14/src/jquery.window.js"; 
                    }
                }
                public static partial class themes 
                {
                    public static partial class black 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/black/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/black/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/black/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/black/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/black/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/black/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/black/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/black/easyui.css";
                            public const string filebox_css = "~/Scripts/easyui14/themes/black/filebox.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/black/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/black/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/black/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/black/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/black/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/black/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/black/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/black/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/black/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/black/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/black/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/black/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/black/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/black/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/black/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/black/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/black/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/black/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/black/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/black/window.css";
                        }
                    }
                    public static partial class bootstrap 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/bootstrap/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/bootstrap/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/bootstrap/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/bootstrap/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/bootstrap/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/bootstrap/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/bootstrap/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/bootstrap/easyui.css";
                            public const string filebox_css = "~/Scripts/easyui14/themes/bootstrap/filebox.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/bootstrap/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/bootstrap/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/bootstrap/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/bootstrap/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/bootstrap/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/bootstrap/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/bootstrap/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/bootstrap/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/bootstrap/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/bootstrap/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/bootstrap/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/bootstrap/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/bootstrap/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/bootstrap/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/bootstrap/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/bootstrap/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/bootstrap/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/bootstrap/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/bootstrap/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/bootstrap/window.css";
                        }
                    }
                    public static partial class @default 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/default/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/default/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/default/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/default/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/default/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/default/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/default/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/default/easyui.css";
                            public const string filebox_css = "~/Scripts/easyui14/themes/default/filebox.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/default/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/default/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/default/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/default/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/default/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/default/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/default/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/default/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/default/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/default/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/default/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/default/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/default/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/default/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/default/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/default/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/default/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/default/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/default/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/default/window.css";
                        }
                    }
                    public static partial class gray 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/gray/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/gray/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/gray/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/gray/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/gray/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/gray/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/gray/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/gray/easyui.css";
                            public const string filebox_css = "~/Scripts/easyui14/themes/gray/filebox.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/gray/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/gray/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/gray/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/gray/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/gray/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/gray/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/gray/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/gray/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/gray/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/gray/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/gray/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/gray/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/gray/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/gray/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/gray/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/gray/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/gray/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/gray/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/gray/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/gray/window.css";
                        }
                    }
                    public static partial class icons 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class metro 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/metro/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/metro/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/metro/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/metro/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/metro/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/metro/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/metro/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/metro/easyui.css";
                            public const string filebox_css = "~/Scripts/easyui14/themes/metro/filebox.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/metro/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/metro/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/metro/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/metro/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/metro/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/metro/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/metro/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/metro/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/metro/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/metro/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/metro/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/metro/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/metro/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/metro/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/metro/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/metro/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/metro/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/metro/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/metro/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/metro/window.css";
                        }
                    }
                    public static partial class metro_blue 
                    {
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/metro-blue/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/metro-blue/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/metro-blue/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/metro-blue/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/metro-blue/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/metro-blue/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/metro-blue/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/metro-blue/easyui.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/metro-blue/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/metro-blue/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/metro-blue/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/metro-blue/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/metro-blue/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/metro-blue/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/metro-blue/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/metro-blue/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/metro-blue/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/metro-blue/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/metro-blue/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/metro-blue/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/metro-blue/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/metro-blue/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/metro-blue/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/metro-blue/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/metro-blue/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/metro-blue/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/metro-blue/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/metro-blue/window.css";
                        }
                    }
                    public static partial class metro_gray 
                    {
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/metro-gray/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/metro-gray/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/metro-gray/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/metro-gray/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/metro-gray/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/metro-gray/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/metro-gray/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/metro-gray/easyui.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/metro-gray/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/metro-gray/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/metro-gray/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/metro-gray/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/metro-gray/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/metro-gray/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/metro-gray/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/metro-gray/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/metro-gray/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/metro-gray/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/metro-gray/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/metro-gray/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/metro-gray/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/metro-gray/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/metro-gray/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/metro-gray/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/metro-gray/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/metro-gray/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/metro-gray/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/metro-gray/window.css";
                        }
                    }
                    public static partial class metro_green 
                    {
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/metro-green/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/metro-green/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/metro-green/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/metro-green/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/metro-green/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/metro-green/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/metro-green/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/metro-green/easyui.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/metro-green/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/metro-green/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/metro-green/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/metro-green/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/metro-green/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/metro-green/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/metro-green/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/metro-green/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/metro-green/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/metro-green/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/metro-green/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/metro-green/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/metro-green/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/metro-green/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/metro-green/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/metro-green/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/metro-green/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/metro-green/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/metro-green/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/metro-green/window.css";
                        }
                    }
                    public static partial class metro_orange 
                    {
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/metro-orange/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/metro-orange/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/metro-orange/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/metro-orange/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/metro-orange/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/metro-orange/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/metro-orange/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/metro-orange/easyui.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/metro-orange/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/metro-orange/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/metro-orange/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/metro-orange/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/metro-orange/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/metro-orange/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/metro-orange/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/metro-orange/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/metro-orange/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/metro-orange/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/metro-orange/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/metro-orange/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/metro-orange/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/metro-orange/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/metro-orange/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/metro-orange/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/metro-orange/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/metro-orange/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/metro-orange/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/metro-orange/window.css";
                        }
                    }
                    public static partial class metro_red 
                    {
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/metro-red/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/metro-red/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/metro-red/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/metro-red/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/metro-red/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/metro-red/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/metro-red/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/metro-red/easyui.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/metro-red/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/metro-red/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/metro-red/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/metro-red/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/metro-red/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/metro-red/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/metro-red/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/metro-red/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/metro-red/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/metro-red/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/metro-red/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/metro-red/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/metro-red/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/metro-red/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/metro-red/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/metro-red/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/metro-red/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/metro-red/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/metro-red/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/metro-red/window.css";
                        }
                    }
                    public static partial class ui_cupertino 
                    {
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/ui-cupertino/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/ui-cupertino/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/ui-cupertino/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/ui-cupertino/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/ui-cupertino/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/ui-cupertino/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/ui-cupertino/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/ui-cupertino/easyui.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/ui-cupertino/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/ui-cupertino/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/ui-cupertino/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/ui-cupertino/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/ui-cupertino/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/ui-cupertino/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/ui-cupertino/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/ui-cupertino/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/ui-cupertino/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/ui-cupertino/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/ui-cupertino/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/ui-cupertino/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/ui-cupertino/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/ui-cupertino/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/ui-cupertino/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/ui-cupertino/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/ui-cupertino/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/ui-cupertino/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/ui-cupertino/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/ui-cupertino/window.css";
                        }
                    }
                    public static partial class ui_dark_hive 
                    {
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/ui-dark-hive/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/ui-dark-hive/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/ui-dark-hive/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/ui-dark-hive/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/ui-dark-hive/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/ui-dark-hive/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/ui-dark-hive/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/ui-dark-hive/easyui.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/ui-dark-hive/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/ui-dark-hive/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/ui-dark-hive/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/ui-dark-hive/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/ui-dark-hive/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/ui-dark-hive/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/ui-dark-hive/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/ui-dark-hive/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/ui-dark-hive/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/ui-dark-hive/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/ui-dark-hive/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/ui-dark-hive/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/ui-dark-hive/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/ui-dark-hive/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/ui-dark-hive/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/ui-dark-hive/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/ui-dark-hive/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/ui-dark-hive/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/ui-dark-hive/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/ui-dark-hive/window.css";
                        }
                    }
                    public static partial class ui_pepper_grinder 
                    {
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/easyui.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/ui-pepper-grinder/window.css";
                        }
                    }
                    public static partial class ui_sunny 
                    {
                        public static class Assets
                        {
                            public const string accordion_css = "~/Scripts/easyui14/themes/ui-sunny/accordion.css";
                            public const string calendar_css = "~/Scripts/easyui14/themes/ui-sunny/calendar.css";
                            public const string combo_css = "~/Scripts/easyui14/themes/ui-sunny/combo.css";
                            public const string combobox_css = "~/Scripts/easyui14/themes/ui-sunny/combobox.css";
                            public const string datagrid_css = "~/Scripts/easyui14/themes/ui-sunny/datagrid.css";
                            public const string datebox_css = "~/Scripts/easyui14/themes/ui-sunny/datebox.css";
                            public const string dialog_css = "~/Scripts/easyui14/themes/ui-sunny/dialog.css";
                            public const string easyui_css = "~/Scripts/easyui14/themes/ui-sunny/easyui.css";
                            public const string layout_css = "~/Scripts/easyui14/themes/ui-sunny/layout.css";
                            public const string linkbutton_css = "~/Scripts/easyui14/themes/ui-sunny/linkbutton.css";
                            public const string menu_css = "~/Scripts/easyui14/themes/ui-sunny/menu.css";
                            public const string menubutton_css = "~/Scripts/easyui14/themes/ui-sunny/menubutton.css";
                            public const string messager_css = "~/Scripts/easyui14/themes/ui-sunny/messager.css";
                            public const string numberbox_css = "~/Scripts/easyui14/themes/ui-sunny/numberbox.css";
                            public const string pagination_css = "~/Scripts/easyui14/themes/ui-sunny/pagination.css";
                            public const string panel_css = "~/Scripts/easyui14/themes/ui-sunny/panel.css";
                            public const string progressbar_css = "~/Scripts/easyui14/themes/ui-sunny/progressbar.css";
                            public const string propertygrid_css = "~/Scripts/easyui14/themes/ui-sunny/propertygrid.css";
                            public const string searchbox_css = "~/Scripts/easyui14/themes/ui-sunny/searchbox.css";
                            public const string slider_css = "~/Scripts/easyui14/themes/ui-sunny/slider.css";
                            public const string spinner_css = "~/Scripts/easyui14/themes/ui-sunny/spinner.css";
                            public const string splitbutton_css = "~/Scripts/easyui14/themes/ui-sunny/splitbutton.css";
                            public const string tabs_css = "~/Scripts/easyui14/themes/ui-sunny/tabs.css";
                            public const string textbox_css = "~/Scripts/easyui14/themes/ui-sunny/textbox.css";
                            public const string tooltip_css = "~/Scripts/easyui14/themes/ui-sunny/tooltip.css";
                            public const string tree_css = "~/Scripts/easyui14/themes/ui-sunny/tree.css";
                            public const string validatebox_css = "~/Scripts/easyui14/themes/ui-sunny/validatebox.css";
                            public const string window_css = "~/Scripts/easyui14/themes/ui-sunny/window.css";
                        }
                    }
                    public static class Assets
                    {
                        public const string color_css = "~/Scripts/easyui14/themes/color.css";
                        public const string icon_css = "~/Scripts/easyui14/themes/icon.css";
                    }
                }
                public static class Assets
                {
                    public const string easyloader_js = "~/Scripts/easyui14/easyloader.js"; 
                    public const string jquery_easyui_min_js = "~/Scripts/easyui14/jquery.easyui.min.js"; 
                    public const string jquery_min_js = "~/Scripts/easyui14/jquery.min.js"; 
                }
            }
            public static partial class js 
            {
                public static class Assets
                {
                }
            }
            public static partial class JSON2 
            {
                public static class Assets
                {
                    public const string cycle_js = "~/Scripts/JSON2/cycle.js"; 
                    public const string json_parse_js = "~/Scripts/JSON2/json_parse.js"; 
                    public const string json_parse_state_js = "~/Scripts/JSON2/json_parse_state.js"; 
                    public const string json2_js = "~/Scripts/JSON2/json2.js"; 
                }
            }
            public static partial class raterater 
            {
                public static class Assets
                {
                    public const string fontawesome_css = "~/Scripts/raterater/fontawesome.css";
                    public const string raterater_css = "~/Scripts/raterater/raterater.css";
                    public const string raterater_jquery_js = "~/Scripts/raterater/raterater.jquery.js"; 
                }
            }
            public static partial class tinymce 
            {
                public static partial class langs 
                {
                    public static class Assets
                    {
                        public const string zh_CN_js = "~/Scripts/tinymce/langs/zh_CN.js"; 
                    }
                }
                public static partial class plugins 
                {
                    public static partial class advlist 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/advlist/plugin.min.js"; 
                        }
                    }
                    public static partial class anchor 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/anchor/plugin.min.js"; 
                        }
                    }
                    public static partial class autolink 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/autolink/plugin.min.js"; 
                        }
                    }
                    public static partial class autoresize 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/autoresize/plugin.min.js"; 
                        }
                    }
                    public static partial class autosave 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/autosave/plugin.min.js"; 
                        }
                    }
                    public static partial class bbcode 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/bbcode/plugin.min.js"; 
                        }
                    }
                    public static partial class charmap 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/charmap/plugin.min.js"; 
                        }
                    }
                    public static partial class code 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/code/plugin.min.js"; 
                        }
                    }
                    public static partial class colorpicker 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/colorpicker/plugin.min.js"; 
                        }
                    }
                    public static partial class contextmenu 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/contextmenu/plugin.min.js"; 
                        }
                    }
                    public static partial class directionality 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/directionality/plugin.min.js"; 
                        }
                    }
                    public static partial class emoticons 
                    {
                        public static partial class img 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/emoticons/plugin.min.js"; 
                        }
                    }
                    public static partial class example 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/example/plugin.min.js"; 
                        }
                    }
                    public static partial class example_dependency 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/example_dependency/plugin.min.js"; 
                        }
                    }
                    public static partial class fullpage 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/fullpage/plugin.min.js"; 
                        }
                    }
                    public static partial class fullscreen 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/fullscreen/plugin.min.js"; 
                        }
                    }
                    public static partial class hr 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/hr/plugin.min.js"; 
                        }
                    }
                    public static partial class image 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/image/plugin.min.js"; 
                        }
                    }
                    public static partial class imagetools 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/imagetools/plugin.min.js"; 
                        }
                    }
                    public static partial class importcss 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/importcss/plugin.min.js"; 
                        }
                    }
                    public static partial class insertdatetime 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/insertdatetime/plugin.min.js"; 
                        }
                    }
                    public static partial class layer 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/layer/plugin.min.js"; 
                        }
                    }
                    public static partial class legacyoutput 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/legacyoutput/plugin.min.js"; 
                        }
                    }
                    public static partial class link 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/link/plugin.min.js"; 
                        }
                    }
                    public static partial class lists 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/lists/plugin.min.js"; 
                        }
                    }
                    public static partial class media 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/media/plugin.min.js"; 
                        }
                    }
                    public static partial class nonbreaking 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/nonbreaking/plugin.min.js"; 
                        }
                    }
                    public static partial class noneditable 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/noneditable/plugin.min.js"; 
                        }
                    }
                    public static partial class pagebreak 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/pagebreak/plugin.min.js"; 
                        }
                    }
                    public static partial class paste 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/paste/plugin.min.js"; 
                        }
                    }
                    public static partial class preview 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/preview/plugin.min.js"; 
                        }
                    }
                    public static partial class print 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/print/plugin.min.js"; 
                        }
                    }
                    public static partial class save 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/save/plugin.min.js"; 
                        }
                    }
                    public static partial class searchreplace 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/searchreplace/plugin.min.js"; 
                        }
                    }
                    public static partial class spellchecker 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/spellchecker/plugin.min.js"; 
                        }
                    }
                    public static partial class tabfocus 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/tabfocus/plugin.min.js"; 
                        }
                    }
                    public static partial class table 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/table/plugin.min.js"; 
                        }
                    }
                    public static partial class template 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/template/plugin.min.js"; 
                        }
                    }
                    public static partial class textcolor 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/textcolor/plugin.min.js"; 
                        }
                    }
                    public static partial class textpattern 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/textpattern/plugin.min.js"; 
                        }
                    }
                    public static partial class visualblocks 
                    {
                        public static partial class css 
                        {
                            public static class Assets
                            {
                                public const string visualblocks_css = "~/Scripts/tinymce/plugins/visualblocks/css/visualblocks.css";
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/visualblocks/plugin.min.js"; 
                        }
                    }
                    public static partial class visualchars 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/visualchars/plugin.min.js"; 
                        }
                    }
                    public static partial class wordcount 
                    {
                        public static class Assets
                        {
                            public const string plugin_min_js = "~/Scripts/tinymce/plugins/wordcount/plugin.min.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class skins 
                {
                    public static partial class lightgray 
                    {
                        public static partial class fonts 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class img 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string content_inline_min_css = "~/Scripts/tinymce/skins/lightgray/content.inline.min.css";
                            public const string content_min_css = "~/Scripts/tinymce/skins/lightgray/content.min.css";
                            public const string skin_ie7_min_css = "~/Scripts/tinymce/skins/lightgray/skin.ie7.min.css";
                            public const string skin_min_css = "~/Scripts/tinymce/skins/lightgray/skin.min.css";
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class themes 
                {
                    public static partial class modern 
                    {
                        public static class Assets
                        {
                            public const string theme_min_js = "~/Scripts/tinymce/themes/modern/theme.min.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string tinymce_min_js = "~/Scripts/tinymce/tinymce.min.js"; 
                }
            }
            public static class Assets
            {
                public const string _references_js = "~/Scripts/_references.js"; 
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string dsf_js = "~/Scripts/dsf.js"; 
                public const string gridmvc_js = "~/Scripts/gridmvc.js"; 
                public const string gridmvc_lang_ru_js = "~/Scripts/gridmvc.lang.ru.js"; 
                public const string gridmvc_min_js = "~/Scripts/gridmvc.min.js"; 
                public const string jquery_2_1_4_intellisense_js = "~/Scripts/jquery-2.1.4.intellisense.js"; 
                public const string jquery_2_1_4_js = "~/Scripts/jquery-2.1.4.js"; 
                public const string jquery_2_1_4_min_js = "~/Scripts/jquery-2.1.4.min.js"; 
                public const string jquery_address_js = "~/Scripts/jquery.address.js"; 
                public const string jquery_bootpag_min_js = "~/Scripts/jquery.bootpag.min.js"; 
                public const string jquery_validate_js = "~/Scripts/jquery.validate.js"; 
                public const string jquery_validate_min_js = "~/Scripts/jquery.validate.min.js"; 
                public const string jquery_validate_unobtrusive_js = "~/Scripts/jquery.validate.unobtrusive.js"; 
                public const string jquery_validate_unobtrusive_min_js = "~/Scripts/jquery.validate.unobtrusive.min.js"; 
                public const string modernizr_2_6_2_js = "~/Scripts/modernizr-2.6.2.js"; 
                public const string MyJS_js = "~/Scripts/MyJS.js"; 
                public const string npm_js = "~/Scripts/npm.js"; 
                public const string QueryString_js = "~/Scripts/QueryString.js"; 
                public const string respond_js = "~/Scripts/respond.js"; 
                public const string respond_min_js = "~/Scripts/respond.min.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class Image 
            {
                public static class Assets
                {
                }
            }
            public static partial class NewFolder1 
            {
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string bootstrap_rating_css = "~/Content/bootstrap-rating.css";
                public const string bootstrap_table_css = "~/Content/bootstrap-table.css";
                public const string bootstrap_theme_css = "~/Content/bootstrap-theme.css";
                public const string bootstrap_theme_min_css = "~/Content/bootstrap-theme.min.css";
                public const string bootstrap_css = "~/Content/bootstrap.css";
                public const string bootstrap_min_css = "~/Content/bootstrap.min.css";
                public const string datepicker_css = "~/Content/datepicker.css";
                public const string datepicker3_css = "~/Content/datepicker3.css";
                public const string fontawesome_css = "~/Content/fontawesome.css";
                public const string Gridmvc_css = "~/Content/Gridmvc.css";
                public const string MvcContrib_Grid_Style_css = "~/Content/MvcContrib-Grid-Style.css";
                public const string PagedList_css = "~/Content/PagedList.css";
                public const string raterater_css = "~/Content/raterater.css";
                public const string Site_css = "~/Content/Site.css";
                public const string styles_css = "~/Content/styles.css";
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


