@model OnlineExam.Models.UserProfile


@{
    ViewBag.Title = "编辑个人资料";

}
@using (Html.BeginForm("EditProfile", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>编辑个人信息</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            @Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RealName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.RealName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RealName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.School, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.School, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.School, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TelPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.TelPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TelPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QQ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.QQ, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QQ, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <input type="file" name="Photo" id="Photo" class="" />
                @*@Html.(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="Save" class="btn btn-default" onclick="return validatePhoto();" />
                &nbsp;     &nbsp;
                @Html.ActionLink("返回", "UserProfile", "Account", new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}

<div>

</div>
<script type="text/javascript">
    $(function () {
        $.datetimepicker.setLocale('zh');
        $("#Birthday").datetimepicker(
                   {

                       lang: "zh",
                       timepicker: false,
                       format: 'Y-m-d'
                       //formatDate:
                   }
                   )
    })


    Alerter.turnOn()

    function validatePhoto() {
        Alerter.info($("#Photo").val())
        //Alerter.info($("#Photo").text())
        //Alerter.info($("#Photo").html())
        var fileName = $("#Photo").val().toString();
        if (fileName == null || fileName == "" || fileName == undefined) {
            //alert("未指定文件");
            return true;
        }
        var i = fileName.indexOf(".")
        //Alerter.info(i)
        var ftype = fileName.substr(i, fileName.length - i);
        Alerter.info(ftype);
        if (ftype == ".jpeg" || ftype == ".png" || ftype == ".jpg" || ftype == ".bmp" || ftype == ".png") return true;
        else {
            alert('必须上传图片文件，可接受的图片类型有jpeg/jpg/bmp/png');
            return false;
        }
    }


</script>

@section Scripts{
    <script src="/Scripts/DatetimePicker/build/jquery.datetimepicker.full.min.js"></script>
    <link href="/Scripts/DatetimePicker/jquery.datetimepicker.css" rel="stylesheet" />

}
