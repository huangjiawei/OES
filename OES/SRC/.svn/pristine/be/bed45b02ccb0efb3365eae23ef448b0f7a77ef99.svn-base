using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using OnlineExam.Models;
namespace OnlineExam.Controllers.Background
{
    public class SingleChoiceController : Controller
    {
        ExamEntities ee = new ExamEntities();
        int PageSize = CKey.DefaultPageCount;
        //GET: SingleChoice
        public ActionResult Index(int? page)
        {
            int currentPage = page ?? 1;
            int amount = ee.QuestionSingleChoice.Count();
            int maxPage = (amount + PageSize - 1) / PageSize;//最大页数
            //防止页数超出界限
            if (currentPage > maxPage)
                currentPage = maxPage;
            ViewBag.CurrentPage = currentPage;
            ViewBag.Amount = amount;
            ViewBag.MaxPage = maxPage;
            return View();
        }

        //public ActionResult Sencor()
        //获取单选题页面列表        
        public ActionResult QuestionList(int page, string key = "")
        {
            if (key == "" || key == CKey.DefaultSearchKeyWord)
            {
                var list = ee.QuestionSingleChoice.OrderBy(m => m.ID).Take(page * PageSize).Skip((page - 1) * PageSize).ToList();
                return View(list);
            }
            else
            {
                string[] s = OnlineExam.App_Code.MyTool.GetSearchStringList(key);
                var temp = from sq in ee.QuestionSingleChoice
                           from k in s
                           where sq.Question.IndexOf(k) >= 0 || sq.OptionA.IndexOf(k) >= 0 || sq.OptionB.IndexOf(k) >= 0
                           || sq.OptionC.IndexOf(k) >= 0 || sq.OptionD.IndexOf(k) >= 0 || sq.ModificationTeacher.IndexOf(k) >= 0
                           select sq;
                var list=temp.OrderBy(m=>m.ID).Take(page*PageSize).Take(page * PageSize).Skip((page - 1) * PageSize).ToList();
                return View(temp.ToList());
            }
        }

        // GET: SingleChoice/Details/5
        public ActionResult Details(int id)
        {
            return View();
        }


        // GET: SingleChoice/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: SingleChoice/Create
        [HttpPost]
        public ActionResult Create(FormCollection collection)
        {
            try
            {
                // TODO: Add insert logic here

                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        // GET: SingleChoice/Edit/5
        public ActionResult Edit(int id)
        {
            return View();
        }

        // POST: SingleChoice/Edit/5
        [HttpPost]
        public ActionResult Edit(int id, FormCollection collection)
        {
            try
            {
                // TODO: Add update logic here

                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        // GET: SingleChoice/Delete/5
        public ActionResult Delete(int id)
        {
            return View();
        }

        // POST: SingleChoice/Delete/5
        [HttpPost]
        public ActionResult Delete(int id, FormCollection collection)
        {
            try
            {
                // TODO: Add delete logic here

                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }
    }
}
