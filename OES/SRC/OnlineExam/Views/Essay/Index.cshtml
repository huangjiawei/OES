@using OnlineExam.Models;
@using MvcContrib.UI.Grid;
@using MvcContrib.UI.Pager
@using MvcContrib.Pagination
@model PagedViewModel<QuestionEssay>

@{ 
    QuestionType qtype = Utitlity.ToQuestionType(ViewBag.questionType.ToString());

}
<div class="row">
    @Html.Partial("_QuestionFilterTool", "Essay")
</div>
<div id="contentGrid" class="row">
    @if (ViewData["ViewType"] == null || (DataView)ViewData["ViewType"] == DataView.GridView)
    {
        @Html.Grid(Model.PagedList).Columns(column =>
   {
       column.For(x => MvcHtmlString.Create("<a onclick='viewItem(" + x.ID + ");' >" + Html.EncodeQuestionID(x.ID, qtype) + "</a>")).SortColumnName("ID").Named("编号");
       //column.For(x => Html.ActionLink(Html.Truncate(x.Question, CKey.QuestionTitleSummaryLenght), "Details", new { id = x.ID })).SortColumnName("Question").Named("题目");
       column.For(x => MvcHtmlString.Create("<div class='cell'>" + x.Question + "<div>")).SortColumnName("Question").Named("题目");
       column.For(x => Html.DivStarForRaterater(x.Difficulty, x.ID)).Named("难度系数").SortColumnName("Difficulty");
       column.For(x => Html.DivStarForRaterater(x.Frequency, x.ID)).Named("考试频率").SortColumnName("Frequency");
       column.For(x =>
       Html.Partial("_AuditImage", x.Audit))
            .SortColumnName("Audit").Named("审核状态");
       column.For(x => x.ModificationTeacher == null ? "" : x.ModificationTeacher).Named("编辑教师").SortColumnName("ModificationTeacher");
       column.For(x => x.DateAdded).Named("导入时间").SortColumnName("DateAdded");
       column.For(x => x.ModificationDate).Named("最后修改时间").SortColumnName("ModificationDate");
       //column.For(x => Html.Truncate(x.Description, CKey.QuestionDescriptionSummaryLenght)).Named("相关描述").SortColumnName("Description");

       column.For(x => MvcHtmlString.Create("<div class='cell'>" + x.Description + "<div>")).Named("相关描述").SortColumnName("Description");
   }).Sort(Model.GridSortOptions).Attributes(new Func<object, object>[] { @class => " table   table-hover " }).RowAttributes(data => new MvcContrib.Hash(new Func<object, object>[] { @class => data.Item.Audit == Auditing.Pass ? "" : "warning", onclick => "onGridRowClick(this)", alt => data.Item.ID }));
    }
    else
    {
        <hr />
        <div class="table table-hover">
            @foreach (QuestionEssay m in Model.PagedList)
            {

                <div>
                    <label>
                        编号:
                    </label>@Html.EncodeQuestionID(m.ID, qtype)
                </div>
                <div><label>题目：</label>@Html.Raw(m.Question)</div>
                <div>
                    审核状态:
                    @Html.Partial("_AuditImage", m.Audit)
                </div>
                <div><label>考试频率:</label><div class="ratebox" data-id="@m.ID" data-rating="@m.Frequency"></div></div>
                <div> <label>难度系数:</label><div class="ratebox" data-id="@m.ID" data-rating="@m.Difficulty"></div></div>
                @Html.Hidden("isMultiple")
                @*@Html.DivStarForRaterater(m.Difficulty, m.ID)*@

                @*@Html.DivStarForRaterater(m.Frequency, m.ID)*@
                <div><label>相关描述:</label>@Html.Raw(m.Description)</div>
                <hr />
            }
        </div>

    }
    @*.RowAttributes(data => new MvcContrib.Hash(onclick => "alert('click')"))*@


</div>
<div class="row"><div id="page-selection"></div></div>
@section Scripts {
    @*<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />*@
    <script src="@Url.Content("~/Scripts/jquery.address.js")"></script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>
    <script src="@Url.Content("~/Scripts/jquery.bootpag.min.js")"></script>
    <script src="@Url.Content("~/Scripts/QueryString.js")"></script>

    <link href="@Url.Content("~/Content/raterater.css")" rel="stylesheet" />
    <link href="@Url.Content("~/css/font-awesome.min.css")" rel="stylesheet" />
    @*<link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet" />*@
    <script src="@Url.Content("~/Scripts/raterater/raterater.jquery.js")"></script>
    @*<link href="@Url.Content("~/Content/bootstrap-rating.css")" rel="stylesheet" />
        <script src="@Url.Content("~/Scripts/bootstrap-rating/bootstrap-rating.min.js")"></script>*@

    @*<link href="@Url.Content("~/Content/MvcContrib-Grid-Style.css")" rel="stylesheet" />*@
}
<style>
    .cell {
        max-height: 100px;
        overflow: hidden;
    }

    td {
        max-width: 200px;
        overflow-y: hidden;
    }
</style>
<script>
    var isMultiple="@ViewBag.questionType"

    function editItem(){
        var id=$(".SelectedItem").attr("alt");
        if(id==undefined||id==null){alert("未选中试题");return;}
        window.open('@Url.Action("Edit")'+'/'+id+"?questionType="+isMultiple);
    }
    function createItem(){
        window.open('@Url.Action("Edit",new { questionType = ViewBag.questionType })');
    }
    function viewItem(id){
        window.open('@Url.Action("Details")'+'/'+id);
    }
    function deleteItem(){
        var id=$(".SelectedItem").attr("alt");
        if(id==undefined||id==null){alert("未选中试题");return;}
        if(confirm("确定要删除选中的题目吗?"))
            $.ajax({
                url:'@Url.Action("Delete")',
                data: { ID:id},
                type: "POST",
                dataType: "json",
                success: function (data) {
                    if (data.Success == 0) {
                        alert("提交失败");
                    } else {
                        window.location.reload();
                    }
                }
            });

    }


    function ReSetRowStyle(){
        //$("#contentGrid").find("img[alt='未审核']").parent().parent().addClass("danger")
        $("#contentGrid tr").removeClass("info");
        $("#contentGrid").find("img[alt='审核不通过']").parent().parent().addClass("warning");
        $("#contentGrid").find("img[alt='未审核']").parent().parent().addClass("warning");

    }
    function deActive(e){
        $(e).removeClass("info");
        $(e).removeClass("SelectedItem");
        //如果为未审核则添加warning类样式
        $(e).find("img[alt='未审核']").parent().parent().addClass("warning")
        $(e).find("img[alt='审核不通过']").parent().parent().addClass("warning")
    }
    function onGridRowClick(e){

        ReSetRowStyle();
        $(e).removeClass("warning");
        $(e).addClass("SelectedItem")
        $(e).addClass("info");

    }

    $(function () {
        $('#page-selection'  ).bootpag({
            total:
            @ViewData["MaxPage"],
            page:@ViewData["CurrentPage"],
            maxVisible: 10,
        }).on("page", function(event,num){
            window.location.href= setUrlEncodedKey("page",num,window.location.search);
        });
        $("#difficulty").val(@ViewData["difficulty"])
        $("#frequency").val(@ViewData["frequency"])
        $("#audit").val(@ViewData["audit"])

        $( '.ratebox' ).raterater( {
            submitFunction: '',
            allowChange: false,
            starWidth: 12,
            spaceWidth: 1,
            isStatic:true,
            numStars:5
        } );
    })



</script>
