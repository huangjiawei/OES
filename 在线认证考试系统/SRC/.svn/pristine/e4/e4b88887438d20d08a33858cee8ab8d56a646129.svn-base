@model OnlineExam.Models.QuestionMultipleChoice
@{
    bool isEdit = Model == null ? false : Model.ID > 0;
    string title = isEdit ? "修改多选题" : "添加多选题";
    string oA, oB, oC, oD, oE, oF, question;
    oA = oB = oC = oD = oE = oF = question = "";
    if (Model != null)
    {
        oA = OnlineExam.App_Code.MyTool.Escape(Model.OptionA);
        oB = OnlineExam.App_Code.MyTool.Escape(Model.OptionB);
        oC = OnlineExam.App_Code.MyTool.Escape(Model.OptionC);
        oD = OnlineExam.App_Code.MyTool.Escape(Model.OptionD);
        oE = OnlineExam.App_Code.MyTool.Escape(Model.OptionE);
        oF = OnlineExam.App_Code.MyTool.Escape(Model.OptionF);
        question = OnlineExam.App_Code.MyTool.Escape(Model.Question);

        //oA = HttpUtility.UrlEncode(oA);
        //oB = HttpUtility.UrlEncode(oB);
        //oC = HttpUtility.UrlEncode(oC);
        //oD = HttpUtility.UrlEncode(oD);
        //oE = HttpUtility.UrlEncode(oE);
        //oF = HttpUtility.UrlEncode(oF);
        //question = HttpUtility.UrlEncode(question);
    }
}
<h4>
    @title
    @if (isEdit)
    {
        <small id="QuestionId">@Html.EncodeQuestionID(Model.ID, QuestionType.MultipleChoice)</small>
    }

</h4>

@using (Html.BeginForm(isEdit ? "Edit" : "Create", "MultipleChoice", new { }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="row">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = " col-sm-1 " })
        </div>
        <div class="row">
            <div class="col-md-12">
                <textarea type="text" id="txtQuestion" name="Question" class="form-control" placeholder="在这里输入题目内容"></textarea>
            </div>
        </div>
        <hr />
        <div class="row">
            @Html.LabelFor(model => model.OptionA, htmlAttributes: new { @class = "  col-sm-1 " })
            <div class="col-sm-4">
                @Html.TextAreaFor(model => model.OptionA, new { @class = "form-control " })
            </div>
            @Html.CheckBoxFor(model => model.AisTrue, new { @class = " col-sm-1" })
            @Html.LabelFor(model => model.OptionB, htmlAttributes: new { @class = "  col-sm-1 " })
            <div class="col-sm-4">
                @Html.TextAreaFor(model => model.OptionB, new { @class = "form-control" })
            </div>
            @Html.CheckBoxFor(model => model.BisTrue, new { @class = "col-sm-1" })
        </div><hr />
        <div class="row">
            @Html.LabelFor(model => model.OptionC, htmlAttributes: new { @class = "  col-sm-1 " })
            <div class="col-sm-4">
                @Html.TextAreaFor(model => model.OptionC, new { @class = "form-control " })
            </div>
            @Html.CheckBoxFor(model => model.CisTrue, new { @class = "  col-sm-1" })
            @Html.LabelFor(model => model.OptionD, htmlAttributes: new { @class = "  col-sm-1 " })
            <div class="col-sm-4">
                @Html.TextAreaFor(model => model.OptionD, new { @class = "form-control  ", placeholder = "(可选)" })
            </div>
            @Html.CheckBoxFor(model => model.DisTrue, new { @class = "col-sm-1 image-check-box" })
        </div>
        <hr />
        <div class="row">
            @Html.LabelFor(model => model.OptionE, htmlAttributes: new { @class = "  col-sm-1 " })
            <div class="col-sm-4">
                @Html.TextAreaFor(model => model.OptionE, new { @class = "form-control ", placeholder = "(可选)" })
            </div>
            @Html.CheckBoxFor(model => model.EisTrue, new { @class = " col-sm-1", style = "padding-left:0" })
            @Html.LabelFor(model => model.OptionF, htmlAttributes: new { @class = "  col-sm-1 " })
            <div class="col-sm-4">
                @Html.TextAreaFor(model => model.OptionF, new { @class = "form-control ", placeholder = "(可选)" })
            </div>
            @Html.CheckBoxFor(model => model.FisTrue, new { @class = "col-sm-1 image-check-box", style = "padding-left:0" })
        </div>
        <hr />
        <div class="row">

            @Html.LabelFor(model => model.Difficulty, htmlAttributes: new { @class = "  col-sm-1" })

            <div id="rd" class="ratebox col-sm-6" data-id="Difficulty" data-rating="0"></div>

            @Html.HiddenFor(model => model.Difficulty)


            @Html.LabelFor(model => model.Frequency, htmlAttributes: new { @class = "  col-sm-1 " })
            <div id="rf" class="ratebox col-sm-5" data-id="Frequency" data-rating="0"></div>
            @Html.HiddenFor(model => model.Frequency)
        </div>
        <hr />
        <div class="row">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "  col-sm-1 " })
            <div class="col-sm-6">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = "(可选)", style = "height:200px" })
            </div>
        </div>
        @Html.ValidationSummary()
        <div id="errorMsg" class="warning">
            @*@Html.ValidationMessageFor(model => model.Difficulty, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Frequency, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })*@
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="提交" class="btn btn-default" onclick="return OnSubmit();" />
            </div>
        </div>
    </div>
}

<style type="text/css">
    label {
        font-weight: normal;
        font-size: small;
    }

    .cke_editor body, .cke_show_borders {
        background-color: #ffffff;
    }
</style>
<script type="text/javascript" language="javascript">
    var oA = "@oA"
    var oB = "@oB"
    var oC = "@oC"
    var oD = "@oD"
    var oE = "@oE"
    var oF = "@oF"
    var qt = "@question"

    oA = unescape(oA)
    alert(oA)
    oB = unescape(oB)
    oC = unescape(oC)
    oD = unescape(oD)
    oE = unescape(oE)
    oF = unescape(oF)
    qt = unescape(qt)

    function InitEditorValue() {
        CKEDITOR.instances.OptionA.setData(oA);
        CKEDITOR.instances.OptionB.setData(oB);
        CKEDITOR.instances.OptionC.setData(oC);
        CKEDITOR.instances.OptionD.setData(oD);
        CKEDITOR.instances.OptionE.setData(oE);
        CKEDITOR.instances.OptionF.setData(oF);
        CKEDITOR.instances.txtQuestion.setData(qt);
    }

    function SetRateValue(id, value) {
        $("#" + id).val(value);
    }

    function IsEditorTextEmpty(content) {
        if (content == undefined) return true;
        content = content.toString().replace(" ", "");
        if (content == "" || content == "<p></p>" || content == "undefined") {
            return true;
        }
        return false;
    }
    function OnSubmit() {
        if (ValidateForm()) {
            $("form").submit();
        }

    }
    function ValidateForm() {
        var error = "";
        //$("")
        if (IsEditorTextEmpty(CKEDITOR.instances.txtQuestion.getData())) error += "题目不能为空；\r\n";
        if (IsEditorTextEmpty(CKEDITOR.instances.OptionA.getData())) error += "选项A不能为空；\r\n";
        if (IsEditorTextEmpty(CKEDITOR.instances.OptionB.getData())) error += "选项B不能为空；\r\n";
        if (IsEditorTextEmpty(CKEDITOR.instances.OptionC.getData())) error += "选项C不能为空；\r\n";
        // if (IsEditorTextEmpty(CKEDITOR.instances.OptionA.getData())) error += "选项D不能为空";
        //if (IsEditorTextEmpty(CKEDITOR.instances.OptionA.getData())) error += "选项E不能为空";

        //if(IsEditorTextEmpty("Description"))

        //$("[name^='Option']").each(function () {
        //    var content = $(this).val().toString().replace(" ", "");
        //    if (content == "" || content == "<p></p>" || content == undefined) {

        //    }
        //});

        var rightOpCount = 0;
        alert($("#AisTrue").attr("checked"));
        //alert($("#AisTrue").checked());
        if ($("#AisTrue").is(":checked")) {
            rightOpCount++;
        }
        if ($("#BisTrue").is(":checked")) rightOpCount++;
        if ($("#CisTrue").is(":checked")) rightOpCount++;
        if ($("#DisTrue").is(":checked")) {
            if (!IsEditorTextEmpty(CKEDITOR.instances.OptionD.getData())) rightOpCount++;
        } else {

        }
        if ($("#EisTrue").is(":checked")) {
            if (!IsEditorTextEmpty(CKEDITOR.instances.OptionE.getData())) rightOpCount++;
        }
        else {

        }
        if ($("#FisTrue").is(":checked")) {
            if (!IsEditorTextEmpty(CKEDITOR.instances.OptionF.getData())) rightOpCount++;
        }
        else {

        }
        if (rightOpCount < 2) {
            error += "答案中必须包含两个正确的选项；\r\n";
        }
        if ($("#Difficulty").val() < 1 || $("#Difficulty").val() > 5) {
            error += "未设置难度系数；\r\n";
        }
        if ($("#Frequency").val() < 1 || $("#Frequency").val() > 5) {
            error += "未设置考试频率；\r\n";
        }
        alert(error);
        $("#errorMsg").html(error)
        if (error == "") return true;
        return false;
    }
    //初始化星号评级控件的值
    function InitRateValue() {
        $(".ratebox[data-id='Frequency']").attr("data-rating", $("#Frequency").val());
        $(".ratebox[data-id='Difficulty']").attr("data-rating", $("#Difficulty").val());
        //alert($(".ratebox[data-id='Frequency']").attr("data-rating"));
    }

    $(function () {
        InitRateValue();
        CKEDITOR.replace('txtQuestion'
            , {
                width: '90%',
                height: '250px',
                //extraPlugins: 'mathJax',
                //mathJaxLib: 'http://cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML'
            }
    );
        //CKEDITOR.config.dialog_backgroundCoverColor = '#12f'
        //CKEDITOR.config.dialog_backgroundCoverColor = '#aaa'
        CKEDITOR.config.extraPlugins = 'uploadimage,confighelper';
        CKEDITOR.config.uploadUrl = '/Api/QuestionBankResource/Upload?QuestionType=' + '@QuestionType.MultipleChoice.ToString()';
        CKEDITOR.config.fontSize_sizes = "small"
        //config.extraPlugins = 'uploadwidget'
        CKEDITOR.inline('OptionA');
        CKEDITOR.inline('OptionB');
        CKEDITOR.inline('OptionC');
        //CKEDITOR.config.placeholder = '可选';
        CKEDITOR.inline('OptionD');
        CKEDITOR.inline('OptionE');
        CKEDITOR.inline('OptionF');
        CKEDITOR.inline('Description',
            {
                width: '80%',
                height: '250px',
            }
            );
        var b = "@isEdit";
        alert(b.toString())
        if (b.toString().toLowerCase() == "true") {
            InitEditorValue();
        }

        $('.ratebox').raterater({
            submitFunction: 'SetRateValue',
            allowChange: true,
            starWidth: 18,
            spaceWidth: 2,
            numStars: 5,
            step: 1
        });
    });
</script>
@section Scripts
        {
    <link href="@Url.Content("~/Content/raterater.css")" rel="stylesheet" />
    <link href="@Url.Content("~/css/font-awesome.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/raterater/raterater.jquery.js")"></script>
    <script src="@Url.Content("~/Scripts/ckeditor/ckeditor.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")"></script>
    @*<script src="//cdn.ckeditor.com/4.5.4/basic/ckeditor.js"></script>*@
    @*<script src="//cdn.ckeditor.com/4.5.4/standard/ckeditor.js"></script>*@
    @*<script src="//cdn.ckeditor.com/4.5.5/full/ckeditor.js"></script>*@


}
