@model OnlineExam.Models.QuestionEssay
@{
    bool isEdit = Model == null ? false : Model.ID > 0;
    string title = isEdit ? "修改" : "添加";
    if (ViewBag.questionType == null)
    {
        if (Model != null) { ViewBag.questionType = Model.QuestionType; }
        else { ViewBag.questionType = QuestionType.ShortAnswer.ToString(); }

    }
    QuestionType qtype = Utitlity.ToQuestionType(ViewBag.questionType);
    title += qtype.GetInfo();
    string question = "";
    string answer = "";
    if (Model != null)
    {

        question = OnlineExam.App_Code.MyTool.Escape(Model.Question);
        answer = OnlineExam.App_Code.MyTool.Escape(Model.Answer);
    }
}
<h4>
    @title
    @if (isEdit)
    {
        <small id="QuestionId">@Html.EncodeQuestionID(Model.ID, qtype)</small>
    }
</h4>

@using (Html.BeginForm(isEdit ? "Edit" : "Create", "Essay", new { }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.QuestionType, new { Value = ViewBag.questionType })
    <div class="form-horizontal">
        <div class="row">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = " col-sm-1 " })
        </div>
        <div class="row">
            <div class="col-md-12">
                <iframe src="/Subject/SubjectDropDown" style="width:700px; height:30px; border-style:none"></iframe>
            </div>
            <div id="subjectlist" class="col-md-12">

                @if (ViewBag.RelateSubject != null)
                {
                    foreach (var i in (List<OnlineExam.Models.Subject>)ViewBag.RelateSubject)
                    {
                        <span id="@i.SubjectID" class="subject">@i.SubjectName<a href="#" class=" glyphicon glyphicon-remove" onclick="$(this).parent().remove()"></a></span>
                    }
                }
            </div>
            @Html.Hidden("SubjectIds")
        </div>
        <div class="row">
            <div class="col-md-12">
                <textarea type="text" id="txtQuestion" name="Question" class="form-control" placeholder="在这里输入题目内容"></textarea>
            </div>
        </div>
        <hr /><div class="row">
            <div class="col-md-12">
                <textarea type="text" id="Answer" name="Answer" class="form-control" placeholder="在这里输入题目答案"></textarea>
            </div>
        </div>
        <hr />

        <div class="row">

            @Html.LabelFor(model => model.Difficulty, htmlAttributes: new { @class = "  col-sm-1" })

            <div id="rd" class="ratebox col-sm-6" data-id="Difficulty" data-rating="0"></div>

            @Html.HiddenFor(model => model.Difficulty)


            @Html.LabelFor(model => model.Frequency, htmlAttributes: new { @class = "  col-sm-1 " })
            <div id="rf" class="ratebox col-sm-5" data-id="Frequency" data-rating="0"></div>
            @Html.HiddenFor(model => model.Frequency)
        </div>
        <hr />
        <div class="row">
            @Html.LabelFor(model => model.Info, htmlAttributes: new { @class = "  col-sm-1 " })
            <div class="col-sm-6">
                @Html.TextAreaFor(model => model.Info, new { @class = "form-control", placeholder = "(可选)", style = "height:200px" })
            </div>
        </div>
        <hr />
        <div class="row">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "  col-sm-1 " })
            <div class="col-sm-6">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = "(可选)", style = "height:200px" })
            </div>
        </div>
        @Html.ValidationSummary()
        <div id="errorMsg" class="warning">
            @*@Html.ValidationMessageFor(model => model.Difficulty, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Frequency, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })*@
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="提交" class="btn btn-default" onclick="return OnSubmit();" />
            </div>
        </div>
    </div>
}
<style type="text/css">
    label {
        font-weight: normal;
        font-size: small;
    }

   

    .cke_editor body, .cke_show_borders {
        background-color: #ffffff;
    }
</style>
<script type="text/javascript" language="javascript">




    function InitEditorValue() {
        var qt = "@question"
        var an = "@answer"
        an = unescape(an);
        qt = unescape(qt)
        CKEDITOR.instances.txtQuestion.setData(qt);
        CKEDITOR.instances.Answer.setData(an);
    }

    function SetRateValue(id, value) {
        $("#" + id).val(value);
    }

    function IsEditorTextEmpty(content) {
        if (content == undefined) return true;
        content = content.toString().replace(" ", "");
        if (content == "" || content == "<p></p>" || content == "undefined") {
            return true;
        }
        return false;
    }
    function OnSubmit() {
        if (ValidateForm()) {
            var ids = "";
            $("#subjectlist").children().each(function () { ids = ids + "," + $(this).attr("id") })
            Alerter.info(ids);
            $("#SubjectIds").val(ids);


            $("form").submit();
        }

    }
    function ValidateForm() {
        var error = "";

        if (IsEditorTextEmpty(CKEDITOR.instances.txtQuestion.getData())) error += "题目不能为空；\r\n";
        if (IsEditorTextEmpty(CKEDITOR.instances.Answer.getData())) error += "答案不能为空；\r\n";
        if ($("#subjectlist").children().length == 0) error += "所属科目不能为空\r\n";

        if ($("#Difficulty").val() < 1 || $("#Difficulty").val() > 5) {
            error += "未设置难度系数；\r\n";
        }
        if ($("#Frequency").val() < 1 || $("#Frequency").val() > 5) {
            error += "未设置考试频率；\r\n";
        }

        alert(error);
        $("#errorMsg").html(error)
        if (error == "") return true;
        return false;
    }
    //初始化星号评级控件的值
    function InitRateValue() {
        $(".ratebox[data-id='Frequency']").attr("data-rating", $("#Frequency").val());
        $(".ratebox[data-id='Difficulty']").attr("data-rating", $("#Difficulty").val());
        //alert($(".ratebox[data-id='Frequency']").attr("data-rating"));
    }
    function AppendSubject(id, name) {
        if ($("#subjectlist").find("[id='" + id + "']").length > 0) alert("科目已添加");
        else $("#subjectlist").append("<span id='" + id + "' class='subject '>" + name + "<a href='#' class='glyphicon glyphicon-remove' onclick='$(this).parent().remove()'></a></span>")

    }


    $(function () {
        InitRateValue();
        CKEDITOR.replace('txtQuestion'
            , {
                width: '90%',
                height: '250px',
                //extraPlugins: 'mathJax',
                //mathJaxLib: 'http://cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML'
            }
    );
        CKEDITOR.replace('Answer'
           , {
               width: '90%',
               height: '200px',
               //extraPlugins: 'mathJax',
               //mathJaxLib: 'http://cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML'
           }
   );
        //CKEDITOR.config.dialog_backgroundCoverColor = '#12f'
        //CKEDITOR.config.dialog_backgroundCoverColor = '#aaa'
        CKEDITOR.config.extraPlugins = 'uploadimage,confighelper';
        CKEDITOR.config.uploadUrl = '/Api/QuestionBankResource/Upload?QuestionType=' + '@qtype.ToString()';
        CKEDITOR.config.fontSize_sizes = "small"
        //config.extraPlugins = 'uploadwidget'

        CKEDITOR.inline('Description',
            {
                width: '80%',
                height: '250px',
            }
            );
        CKEDITOR.inline('Info',
        {
            width: '80%',
            height: '250px',
        }
        );
        var b = "@isEdit";

        if (b.toString().toLowerCase() == "true") {
            InitEditorValue();
        }
        $('.ratebox').raterater({
            submitFunction: 'SetRateValue',
            allowChange: true,
            starWidth: 18,
            spaceWidth: 2,
            numStars: 5,
            step: 1
        });
    });
</script>
@section Scripts
        {
    <link href="@Url.Content("~/Content/raterater.css")" rel="stylesheet" />
    <link href="@Url.Content("~/css/font-awesome.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/raterater/raterater.jquery.js")"></script>
    <script src="@Url.Content("~/Scripts/ckeditor/ckeditor.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")"></script>
    @*<script src="/Scripts/Debugger/Alerter.js"></script>*@
    @*<script src="//cdn.ckeditor.com/4.5.4/basic/ckeditor.js"></script>*@
    @*<script src="//cdn.ckeditor.com/4.5.4/standard/ckeditor.js"></script>*@
    @*<script src="//cdn.ckeditor.com/4.5.5/full/ckeditor.js"></script>*@


}
