using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.IO;
using OnlineExam.Models;
using System.Reflection;
using System.Text;
using System.Globalization;
//using ExampleBase;
using NetOffice;
using Word = NetOffice.WordApi;
using NetOffice.WordApi.Enums;
//using System.IO;
//using DocumentFormat.OpenXml;
//using DocumentFormat.OpenXml.Packaging;
//using DocumentFormat.OpenXml.Wordprocessing;
//using A = DocumentFormat.OpenXml.Drawing;
//using DW = DocumentFormat.OpenXml.Drawing.Wordprocessing;
//using PIC = DocumentFormat.OpenXml.Drawing.Pictures;
//using System.IO.Packaging;
namespace OnlineExam.Controllers
{
    public class PaperImportController : Controller
    {
        ExamEntities ee = new ExamEntities();
        //允许的文件格式
        List<string> acceptFileType = new List<string>() { ".doc", ".docx", ".wps" };
        // GET: PaperImport
        [HttpGet]
        public ActionResult Index()
        {
            return View();
        }
        [HttpPost]
        public ActionResult UploadFile()
        {
            if (Request.Files.Count > 0)
            {
                //var docfiles = new List<string>();
                foreach (string file in Request.Files)
                {
                    var postedFile = Request.Files[file];
                    string filePath;
                    string fileType = postedFile.FileName.Substring(postedFile.FileName.LastIndexOf("."));
                    if (!acceptFileType.Contains(fileType))
                    {
                        ViewBag.FileError = "请上传指定的文件格式";
                        return View("Index");
                    }
                    string fileName;
                    do
                    {
                        fileName = Guid.NewGuid().ToString() + fileType;
                        filePath = Server.MapPath("~" + CUrl.ImportPaper + fileName);
                    }
                    while (System.IO.File.Exists(filePath));
                    //try
                    //{
                    postedFile.SaveAs(filePath);
                    PaperImporter pi = new PaperImporter();
                    var iPaper = pi.GetPaperFormFile(filePath);
                    string key = Guid.NewGuid().ToString();
                    ViewBag.PaperKey = key;
                    Session[SessionString.ImportPaper + key] = iPaper;
                    return View(iPaper);
                    //}
                    //catch
                    //{

                    //}
                    //docfiles.Add(filePath);
                }
                return View();
            }
            else
            {
                ViewBag.FileError = "请上传文件";
                return View("Index");
            }

        }

        // GET: PaperImport/Details/5

        public JsonResult Delete(int id, string key)
        {
            JsonReturn jr = new JsonReturn();

            try
            {
                ImportPaper ip = (ImportPaper)Session[SessionString.ImportPaper + key];
                var q = ip.Questions.Where(m => m.ID == id).SingleOrDefault();
                ip.Questions.Remove(q);
                jr.Success = 1;

            }
            catch (Exception e)
            {
                jr.Success = 0;
                jr.Message = e.Message;

            }
            return Json(jr, JsonRequestBehavior.AllowGet);

        }

        // GET: PaperImport/Create
        public JsonResult Import(int id, string key)
        {
            JsonReturn jr = new JsonReturn();
            ImportPaper ip = (ImportPaper)Session[SessionString.ImportPaper + key];
            var q = ip.Questions.Where(m => m.ID == id).Single();
            object o = q.ToSpecificQuestion();
            switch (q.QType)
            {
                case QuestionType.SingleChoice:

                    ee.QuestionChoice.Add((QuestionChoice)o);

                    break;
                case QuestionType.MultipleChoice:
                    ee.QuestionChoice.Add((QuestionChoice)o);

                    break;
                case QuestionType.Completion:
                    ee.QuestionEssay.Add((QuestionEssay)o);

                    break;
                case QuestionType.Discussion:
                    ee.QuestionEssay.Add((QuestionEssay)o);

                    break;
                case QuestionType.ShortAnswer:
                case QuestionType.UnKnown:
                    ee.QuestionEssay.Add((QuestionEssay)o);
                    break;
            }
            try
            {
                ee.SaveChanges();
                jr.Success = 1;
            }
            catch (Exception ex)
            {

                jr.Success = 0;
                jr.Message = ex.Message;

            }


            return Json(jr, JsonRequestBehavior.AllowGet);

        }
        // POST: PaperImport/Create
        //[HttpPost]
        //public ActionResult Create(FormCollection collection)
        //{
        //    try
        //    {
        //        // TODO: Add insert logic here

        //        return RedirectToAction("Index");
        //    }
        //    catch
        //    {
        //        return View();
        //    }
        //}


    }
}
