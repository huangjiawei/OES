@model OnlineExam.Models.TestPaper
@{
    OnlineExam.Models.ExamEntities ee = new OnlineExam.Models.ExamEntities();
    var title = "试卷试题编辑";
    string bigNum = "零一二三四五六七八九十";
    var cids = Model.Paper_Choice.Select(m => m.QuestionID).ToList();
    var Choice = (from q in ee.QuestionChoice
                  where cids.Contains(q.ID)
                  select q).ToList();
    var eids = Model.Paper_Essay.Select(m => m.QuestionID).ToList();
    var Essay = (from q in ee.QuestionEssay
                 where eids.Contains(q.ID)
                 select q).ToList();
}



<div id="QuestionCategoryDlgTemplate">
    <div class="form-horizontal">
        <div class="form-group">
            @Html.Label("sequence", "大题号", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class=" col-md-8">
                <select class="form-control" id="sequence">
                    @for (int i = 1; i < 10; i++)
                    {
                        <option value="@i">@bigNum[i]</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("categoryName", "名称", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class=" col-md-8">
                <input type="text" class="form-control " id="categoryName">
            </div>
        </div>
        <div class="form-group">
            @Html.Label("qtype", "试题类型", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class=" col-md-8">
                @Html.DropDownList("qtype", Utitlity.GetQuestionTypeSelectList().AsEnumerable(), new { @class = " form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("score", "每题默认分数", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class=" col-md-8">
                <input type="number" value="5" class=" form-control " max="100" min="1" id="score">
            </div>
        </div>
    </div>

</div>
<div class="form-horizontal">
    <h4 class="disabled">
        @title
        ——
        @Model.Name
    </h4>
    @Html.HiddenFor(model => model.ID)
    <h5>
        @Html.LabelFor(m => m.ExamType) :  @Model.ExamType.ToString() &nbsp;&nbsp;@Html.LabelFor(m => m.SubjectID)
        @{
            var subject = Utitlity.GetSubjct(Model.SubjectID);
            if (subject != null)
            {

                @subject.SubjectName

            }
            else
            {
                @Model.SubjectID
            }
        }
    </h5>
</div>
<div class="tab-pane">
    <div class="form-horizontal">
        <span><input id="ckanswer" checked="checked" type="checkbox" onchange="onCkChange()" />显示答案</span>
        <span><input id="ckinfo" checked="checked" type="checkbox" onchange="    onCkChange()" />显示解释</span><span>
            <input id="ckoption" checked="checked" type="checkbox" onchange="onCkChange()" />显示选项
        </span>
        @*<span><input id="ckscore" type="checkbox" onchange="onCkChange()" />显示分数</span>*@
    </div>
    <a class="glyphicon glyphicon-plus" onclick="showQuestionCategoryModel(this)"></a>

</div>
<div class=" panel">

    <ul id="myTab" class="nav nav-tabs">
        @foreach (var cate in Model.Paper_QuestionCategory.OrderBy(m => m.Sequence))
            {
            <li class='dropdown  @(cate.Sequence==1?"  acitve":"")'>
                <a href="#tab-@cate.Sequence" data-toggle="tab">
                    @bigNum[cate.Sequence]、
                    @Html.Truncate(cate.Title, 10)
                </a>
            </li>
        }
    </ul>
    <div id="myTabContent" class="tab-content">

        @foreach (var cate in Model.Paper_QuestionCategory.OrderBy(m => m.Sequence))
            {
                if (cate.QuestionType == QuestionType.SingleChoice.ToString() || cate.QuestionType == QuestionType.MultipleChoice.ToString())
                {
                    var qlist = cate.Paper_Choice.AsEnumerable();
                <div class='tab-pane fade panel  @(cate.Sequence==1?" in acitve":"")' id="tab-@cate.Sequence">
                    <div class="panel-body">
                        <h4 class="row big-title">
                            @bigNum[cate.Sequence]
                            、
                            @cate.Title
                            (每题默认
                            @cate.ScorePerQuestion
                            分
                            )
                        </h4>
                        @if (cate.Quantity > 0 && qlist.Count() > 0)
                        {
                            var type = QuestionType.MultipleChoice.ToString() == cate.QuestionType ? "multiple" : "single";
                            var questions = from s in Choice
                                            from y in qlist
                                            where y.QuestionID == s.ID
                                            orderby y.BigQuestionNumber, y.SmallQuestionNumber
                                            select new { Q = s, P = y };

                            foreach (var q in questions)
                            {
                                <div class=" panel-body question-content">
                                    @Html.Hidden("QuestionID", q.Q.ID)
                                    <div class="row ">
                                        <div class="flowleft question-number">@q.P.SmallQuestionNumber、</div>
                                        <div class="flowleft question">
                                            @Html.Raw(q.Q.Question)
                                        </div>
                                        <span class="score">
                                            (
                                            @q.P.Score
                                            分)
                                        </span>
                                    </div>
                                    <div class="option-list @type">
                                        <div data="A" class="row"><div class="flowleft">A：</div><div class="flowleft">@Html.Raw(q.Q.OptionA)</div></div>
                                        <div data="B" class="row"><div class="flowleft">B：</div><div class="flowleft">@Html.Raw(q.Q.OptionB)</div></div>
                                        @if (!string.IsNullOrWhiteSpace(q.Q.OptionC))
                                        {
                                            <div data="C" class="row"><div class="flowleft">C：</div><div class="flowleft">@Html.Raw(q.Q.OptionC)</div></div>
                                            if (!string.IsNullOrWhiteSpace(q.Q.OptionD))
                                            {
                                                <div data="D" class="row"><div class="flowleft">D：</div><div class="flowleft">@Html.Raw(q.Q.OptionD)</div></div>
                                                if (!string.IsNullOrWhiteSpace(q.Q.OptionE))
                                                {

                                                    <div data="E" class="row"><div class="flowleft">E：</div><div class="flowleft">@Html.Raw(q.Q.OptionE)</div></div>
                                                    if (!string.IsNullOrWhiteSpace(q.Q.OptionD))
                                                    {

                                                        <div data="F" class="row"><div class="flowleft">F：</div><div class="flowleft">@Html.Raw(q.Q.OptionF)</div></div>
                                                    }
                                                }
                                            }
                                        }

                                    </div>
                                    <div class="row answer">
                                        <div class="flowleft">答案：</div>
                                        <div class="flowleft ">
                                            @Utitlity.GetChoiceAnswer(q.Q)
                                        </div>
                                    </div>
                                    <div class="row remark">
                                        <div class="flowleft">解释：</div>
                                        <div class="flowleft ">
                                            @Html.Raw(q.Q.Description)
                                        </div>
                                    </div>
                                    <div class="toolbar row">
                                        <a class="btn btn-primary btn-xs" target="_blank" href="@Url.Content("/Choice/Details?id="+ q.Q.ID)">查看</a>
                                        <a class="btn btn-danger btn-xs" onclick="removeQuestion(this)">移除</a>
                                        @*<a class="btn btn-warning btn-xs" onclick="moveItem(this)">转到</a>*@
                                    </div>
                                </div>
                                <hr />
                            }

                        }
                        else
                        {
                            <div>未添加任何题目</div>
                        }
                    </div>
                </div>
            }
            else
            {
                var qlist = cate.Paper_Essay.AsEnumerable();
                <div class='tab-pane fade panel  @(cate.Sequence==1?" in acitve":"")' id="tab-@cate.Sequence">
                    <div class="panel-body">
                        <h4 class="row  big-title">
                            @bigNum[cate.Sequence]
                            、
                            @cate.Title
                            (每题默认
                            @cate.ScorePerQuestion
                            分
                            )
                            <a class="btn btn-primary btn-sm" onclick="editCategory(this)">修改</a>
                            <a class="btn btn-primary btn-sm" onclick="addQuestion(this)">添加试题</a>
                            <a class="btn btn-danger btn-sm" onclick="removeCategory(this)">删除</a>
                            <a class="btn btn-danger btn-sm" onclick="clearQuestion(this)">清空试题</a>


                        </h4>
                        @if (cate.Quantity > 0 && qlist.Count() > 0)
                        {
                            //var type = QuestionType.MultipleChoice.ToString() == cate.QuestionType ? "multiple" : "single";
                            var questions = from s in Essay
                                            from y in qlist
                                            where y.QuestionID == s.ID
                                            orderby y.BigQuestionNumber, y.SmallQuestionNumber
                                            select new { Q = s, P = y };


                            foreach (var q in questions)
                            {
                                <div class="panel-body question-content ">
                                    @Html.Hidden("QuestionID", q.P.SmallQuestionNumber)
                                    <div class="row question">
                                        <div class="flowleft question-number">@q.P.SmallQuestionNumber、</div>
                                        <div class="flowleft ">
                                            @Html.Raw(q.Q.Question) <span class="score">
                                                (
                                                @q.P.Score
                                                分)
                                            </span>
                                        </div>
                                    </div>
                                    <div class="row answer">
                                        <div class="flowleft">答案：</div>
                                        <div class="flowleft ">
                                            @Html.Raw(q.Q.Answer)
                                        </div>
                                    </div>
                                    <div class="row remark">
                                        <div class="flowleft">解释：</div>
                                        <div class="flowleft ">
                                            @Html.Raw(q.Q.Description)
                                        </div>
                                    </div>
                                    <div class="toolbar row">
                                        @*@Html.ActionLink("查看","Details", "Choice", new { id = q.Q.ID, target = "_blank", @class = "btn btn-default" })*@
                                        <a class="glyphicon glyphicon-arrow-up"></a>
                                        <a class="glyphicon glyphicon-arrow-down"></a>

                                        <a class="btn btn-primary btn-xs" target="_blank" href="@Url.Content("/Essay/Details?id="+ q.Q.ID)">查看</a>
                                        <a class="btn btn-danger btn-xs" onclick="removeQuestion(this)">移除</a>
                                        @*<a class="btn btn-danger btn-xs" onclick="move(this)">转到</a>*@
                                        <div class="btn-group">
                                            <button onmousedown="generateMenu()" type="button" class="btn btn-warning btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                转移到 <span class="caret"></span>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a onclick=""></a></li>
                                                <li><a href="#">Another action</a></li>
                                                <li><a href="#">Something else here</a></li>
                                            </ul>
                                        </div>


                                    </div>
                                </div>
                                <hr />
                            }

                        }
                        else
                        {
                            <div>未添加任何题目</div>
                        }
                    </div>
                </div>
            }
        }
    </div>
    <div class="container">
    </div>
</div>
<div id="menu" class="hidden">
    <ul>
        <li><a>试题候选区</a></li>
        <li><a>收藏夹</a></li>
        <li><a>试题候选区</a></li>
        <li><a>试题候选区</a></li>
    </ul>
</div>
@section Scripts
{
    <link rel="stylesheet" href="/Scripts/artDialog/css/ui-dialog.css">
    <script src="/Scripts/artDialog/dist/dialog-plus-min.js"></script>
    <script src="/Scripts/vue.min.js"></script>
    <script>
        var bigNum = "零一二三四五六七八九十";
        Alerter.turnOn();
        $(function () {
            //Alerter.info($("#myTab").find("li:eq(0)").children().attr("href"))
            $("#myTab").find("li:eq(0)").find("a").click();;
            $(".tab-pane").find("hr:last").remove();

        })
        function generateMenu(e) {
            var elem = "<li><</li>"
            $(e).parent().find("ul").append(elem)

        }
        function removeQuestion(e) {
            var qlist = $(e).parent().parent().parent()
            $(e).parent().parent().remove();
            //reOrder($(e).parent().parent().parent());

            var i = 1;
            $(qlist).children("div").each(function () {
                Alerter.info($(this).html());
                $(this).find(".question").find(".question-number").text(i + "、");
                i += 1;
            })
        }
        function reOrderTab() {
            var i = 1;
            $()

        }
        function moveItem(e) {
            //$("#menu").removeClass("hidden").

        }

        function onCkChange() {
            if ($("#ckoption").is(":checked")) { $(".option-list").removeClass("hidden") }
            else { $(".option-list").addClass("hidden") }

            if ($("#ckanswer").is(":checked")) { $(".answer").removeClass("hidden") }
            else { $(".answer").addClass("hidden") }

            if ($("#ckinfo").is(":checked")) { $(".remark").removeClass("hidden") }
            else { $(".remark").addClass("hidden") }



            //if ($("#ckoption").is(":checked")) { $(".option").addClass("hidden") }
            //else { $(".option").removeClass("hidden") }


        }


        function removeCategory(e) {

            if (confirm("确定要删除当前的大题吗？")) {
                $(e).parent()

            }
        }
        function clearQuestion(e) {


        }
        function clearQuestion(e) {


        }
        function editCategory(e) {


        }
        function showQuestionCategoryModel(num) {
            if (num == null || num == undefined) {



            }
            if (num < 0 || num > 9) { alert("错误"); return; }


        }
        function AddCateogry() {


        }
        function OpenAuditDlg() {
            var dlgCotnet = "<div id='QuestionCategoryDlg'>" + $("#QuestionCategoryDlgTemplate").html() + "</div>";
            var dlg = dialog({
                title: '添加大题',
                content: dlgCotnet,
                okValue: '通过',
                ok: function () {
                    SumitAudit('@Auditing.Pass')
                    return false;
                },
                cancleDisplay: ture

            });
            dlg.show();
        }
    </script>
}
