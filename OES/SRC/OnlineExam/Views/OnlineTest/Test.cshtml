@using OnlineExam.Models;
@model OnlineExam.Models.PaperGenerate
@{
    int i = 1;
    int j = 1;
    string bigNum = "零一二三四五六七八九十";
}
<div class="container">
    <div class="timer">
        @{Html.RenderPartial("_TestTimer"); }
    </div>
    @using (Html.BeginForm("SubmitPaper", "OnlineTest", FormMethod.Post, new { id = "testContent" }))
    {
        <h2 class="exam-name">@Model.Paper.Name</h2>
        foreach (var cate in Model.Paper.Paper_QuestionCategory.OrderBy(m => m.Sequence))
        {
            if (cate.QuestionType == QuestionType.SingleChoice.ToString() || cate.QuestionType == QuestionType.MultipleChoice.ToString())
            {
                var qlist = cate.Paper_Choice.AsEnumerable();
                if (cate.Quantity > 0 && qlist.Count() > 0)
                {
                    var type = QuestionType.MultipleChoice.ToString() == cate.QuestionType ? "multiple" : "single";
                    var questions = from s in Model.Choice
                                    from y in qlist
                                    where y.QuestionID == s.ID
                                    orderby y.BigQuestionNumber, y.SmallQuestionNumber
                                    select s;
                    <br />
                    <h4 class="row big-title">
                        @bigNum[j++]
                        、
                        @cate.Title
                        (@qlist.Count()
                        题)
                    </h4>
                    foreach (var q in questions)
                    {
                        <div class="row question">
                            <div class="flowleft">@i、</div>
                            <div class="flowleft">
                                @Html.Raw(q.Question)
                            </div>
                        </div>
                        <div class="option-list @type">
                            <div data="A" class="row"><div class="flowleft">A：</div><div class="flowleft">@Html.Raw(q.OptionA)</div></div>
                            <div data="B" class="row"><div class="flowleft">B：</div><div class="flowleft">@Html.Raw(q.OptionB)</div></div>
                            @if (!string.IsNullOrWhiteSpace(q.OptionC))
                            {
                                <div data="C" class="row"><div class="flowleft">C：</div><div class="flowleft">@Html.Raw(q.OptionC)</div></div>
                                if (!string.IsNullOrWhiteSpace(q.OptionD))
                                {
                                    <div data="D" class="row"><div class="flowleft">D：</div><div class="flowleft">@Html.Raw(q.OptionD)</div></div>
                                    if (!string.IsNullOrWhiteSpace(q.OptionE))
                                    {
                                        <div data="E" class="row"><div class="flowleft">E：</div><div class="flowleft">@Html.Raw(q.OptionE)</div></div>
                                        if (!string.IsNullOrWhiteSpace(q.OptionD))
                                        {
                                            <div data="F" class="row"><div class="flowleft">F：</div><div class="flowleft">@Html.Raw(q.OptionF)</div></div>
                                        }
                                    }
                                }
                            }
                        </div>
                        <div id="answer" class="row">我的回答：<input type="text"  readonly="readonly" option="@type" id="@i" name='@("answer" + i.ToString() )' value="" /></div>
                        <br />
                        i++;
                    }
                }
                else { }
            }
            else
            {
                var qlist = cate.Paper_Essay.AsEnumerable();
                if (cate.Quantity > 0 && qlist.Count() > 0)
                {
                    //var type = QuestionType.MultipleChoice.ToString() == cate.QuestionType ? "multiple" : "single";
                    var questions = from s in Model.Essay
                                    from y in qlist
                                    where y.QuestionID == s.ID
                                    orderby y.BigQuestionNumber, y.SmallQuestionNumber
                                    select s;
                    <br />
                    <h4 class="row  big-title">
                        @bigNum[j++]
                        、
                        @cate.Title
                        (@qlist.Count()
                        题)
                    </h4>
                    foreach (var q in questions)
                    {
                        <div class="row question">
                            <div class="flowleft">@i、</div>
                            <div class="flowleft">
                                @Html.Raw(q.Question)
                            </div>
                        </div>
                        <div id="answer" class="row">
                            @*我的回答：<br />*@
                            @Html.TextArea("answer" + i.ToString(), new { id = i.ToString(), col = "100", row = "6", @class = "col-md-6 form-control", placeholder = "请在这里填写问题您的答案" })
                        </div>
                        <br />
                        i++;
                    }
                }
                else { }
            }
        }
        <a class="btn btn-info" onclick="validatePaper()">检查</a>
        <input class="btn btn-success" value="交卷" type="submit" />
        <input class="btn btn-primary" value="临时保存" onclick="savePaper();" type="button" />
    }
</div>
@section Scripts
{
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet">
    <link href="@Url.Content("~/Content/styles.css")" rel="stylesheet">
    <script src="@Url.Content("~/Scripts/jquery-2.1.4.min.js")"></script>
    <script src="/Scripts/jquery.form.js"></script>
    @*<script src="@Url.Content("~/Scripts/js/bootstrap.min.js")"></script>*@
    <script src="/Scripts/Debugger/Alerter.js"></script>
    <script src="/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="/Scripts/jquery.validate.min.js"></script>
    <script src="/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <style>
        input {
            color: darkblue;
        }
        .exam-name {
            font-weight: bolder;
            font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
            margin: 10px 10px 10px 10px;
        }
        .exam-name {
            margin-top: 20px;
        }
        textarea {
            color: darkblue;
        }
        .timer {
            float: right;
            margin: 3px 3px;
            /*position:fixed;*/
        }
    </style>
    <script>
        function validatePaper() {
            //var ok = true;
            var emptyList = "";
            $("input[type='text']").each(function () {
                if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "" || $(this).val().trim() == "") {
                    $(this).addClass("bg-danger");
                    emptyList += $(this).attr("id") + "、";
                } else {
                    if ($(this).attr("option") == "multiple") {
                        if ($(this).val().trim().length < 3) {
                            $(this).addClass("bg-danger");
                            emptyList += $(this).attr("id") + "、";
                        }
                    }
                }
            })
            $("textarea").each(function () {
                if ($(this).val() == null || $(this).val() == undefined || $(this).val() == "" || $(this).val().trim() == "") {
                    $(this).addClass("bg-danger");
                    emptyList += $(this).attr("id") + "、";
                }
            })
        }
        function AjaxSubmit(){
            $("#testContent").ajaxSubmit({url: '@Url.Action("SaveAnswer")', type: 'post'});
        }
        $(function () {
            //$(".option-list").children().click(option)
            //$(".option-list").children().bind("mouseover", optionOver(), false);
            //$(".option-list").children().bind("mouseout", optionOut(), false);
            $(".option-list").children().mouseover(optionOver)
            $(".option-list").children().mouseout(optionOut)
            $(".single").children().click(optionSelectSingle);
            $(".multiple").children().click(optionSelectMultiple);
            $("textarea").blur(function () { if ($(this).val().length > 0) { $(this).removeClass("bg-danger"); } })
            var interval =@CKey.SaveAnswerInterval ;//每10分钟临时保存一次
            setInterval(savePaper, interval)
        })
        function savePaper() {
            $("textarea").each(function(){console.log($(this).val())})
            $("#testContent").ajaxSubmit({url: '@Url.Action("SaveAnswer")', type: 'post'});
        }
        function optionOver() {
            $(this).addClass("bg-info")
        }
        function optionOut() {
            $(this).removeClass("bg-info")
        }
        function optionSelectSingle() {
            //Alerter.info("select1");
            $(this).parent().children().removeClass("bg-info")
            $(this).parent().children().removeClass("bg-success")
            $(this).addClass("bg-success")
            $(this).parent().next().find("input").val($(this).attr("data")).removeClass("bg-danger");
        }
        function optionSelectMultiple() {
            $(this).parent().children().removeClass("bg-info")
            if ($(this).hasClass("bg-success"))
                $(this).removeClass("bg-success")
            else
                $(this).addClass("bg-success")
            var answer = "";
            $(this).parent().find(".bg-success").each(function () { answer += $(this).attr("data") + " " })
            $(this).parent().next().find("input").val(answer)
            if (answer.length > 3) {
                $(this).parent().next().find("input").removeClass("bg-danger");
            }
        }
    </script>
}
